(undo-tree-save-format-version . 1)
"87f9703f37b4bcd1d3f546c6ffe3be750897be1d"
[nil nil nil nil (25774 34994 841441 664000) 0 nil]
([nil nil ((#("Lean" 0 4 (face (bold underline) fontified t)) . 1678) (undo-tree-id14 . -4) (t 25764 4655 368769 156000)) nil (25774 34994 841440 807000) 0 nil])
([nil nil ((1678 . 1683)) nil (25774 34994 841440 19000) 0 nil])
([nil nil ((#(" for" 0 1 (face (bold underline) hilit-chg-delete nil fontified t) 1 4 (face (bold underline) fontified t)) . 1683) (undo-tree-id13 . -4)) nil (25774 34994 841439 665000) 0 nil])
([nil nil ((#(" the" 0 1 (face (bold underline) hilit-chg-delete hilit-chg-delete fontified t) 1 4 (face (bold underline) fontified t)) . 1683) (undo-tree-id11 . -1) (undo-tree-id12 . -4)) nil (25774 34994 841438 983000) 0 nil])
([nil nil ((#(" Curious" 0 1 (face (bold underline) hilit-chg-delete hilit-chg-delete fontified t) 1 8 (face (bold underline) fontified t)) . 1683) (undo-tree-id9 . -1) (undo-tree-id10 . -8)) nil (25774 34994 841435 683000) 0 nil])
([nil nil ((#(" Mathematician" 0 1 (face (bold underline) hilit-chg-delete hilit-chg-delete fontified t) 1 14 (face (bold underline) fontified t)) . 1683) (undo-tree-id7 . -1) (undo-tree-id8 . -14)) nil (25774 34994 841434 71000) 0 nil])
([nil nil ((#(" 2023" 0 1 (face (bold underline) hilit-chg-delete hilit-chg-delete fontified t) 1 5 (face (bold underline) fontified t)) . 1683) (undo-tree-id5 . -1) (undo-tree-id6 . -5)) nil (25774 34994 841432 645000) 0 nil])
([nil nil ((#(" Tutorial" 0 1 (face (bold underline) hilit-chg-delete hilit-chg-delete fontified t) 1 9 (face (bold underline) fontified t)) . 1683) (undo-tree-id3 . -1) (undo-tree-id4 . -9)) nil (25774 34994 841431 379000) 0 nil])
([nil nil ((#("                  <h2>4–7 September (Mo–Th), Düsseldorf</h2>" 0 19 (fontified t) 19 21 (face font-lock-function-name-face fontified t) 21 22 (fontified t) 22 55 (face (bold-italic underline) fontified t) 55 57 (fontified t) 57 59 (face font-lock-function-name-face fontified t) 59 60 (fontified t)) . 1689) (undo-tree-id2 . -60)) nil (25774 34994 841429 608000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 1689) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25774 34994 841425 816000) 0 nil])
([nil nil ((#("                  Are you curious what the <a href=\"https://www.quantamagazine.org/lean-computer-program-confirms-peter-scholze-proof-20210728/\">excitement</a> around the proof assistant <a href=\"https://leanprover.github.io/\">Lean</a> is all about?
                  Are you intrigued by recent successes in the formalization of <a href=\"https://leanprover-community.github.io/sphere-eversion/\">deep</a> <a href=\"https://flypitch.github.io/about/\">mathematical</a> <a href=\"https://leanprover-community.github.io/blog/posts/lte-final/\">theorems</a>, and would like to understand more concretely what this formalization entails?
                  Do you find yourself wondering how far your favorite area of mathematics is still away from being formalized, and what lies ahead?
              </p>

              <p>
                Then Lean for the Curious Mathematician Tutorial is for you!  
                        The tutorial will offer an opportunity to gain hands-on experience with Lean under the guidance of expert tutors.
                        A series of lectures will systematically introduce the software and the associated mathematical library,
                        with plenty of time left in between for problem-solving and first small projects.
                      </p>
                      <p>
                        Starting from the basics (how to install and use Lean, essential mechanisms for formalizing mathematics, navigating the proof library mathlib, …),
                        the lectures will build up towards more advanced topics that illustrate how formalization works in different areas of mathematics.  The specific areas  covered will depend largely on the participants' interests
                        (e.g. real and complex analysis, number theory, topology, combinatorics, category theory, …).
                      </p>
                      <h3>Tutors:</h3>
                      <ul>
                          <li><a href=\"https://remydegenne.github.io/\">Rémy Degenne</a> (Lille)</li>
                          <li><a href=\"http://florisvandoorn.com/\">Floris van Doorn</a> (Paris-Saclay)</li>
                          <li><a href=\"https://mariainesdff.github.io/\">Maria Ines de Frutos Fernandez</a> (Madrid)</li>
                          <li><a href=\"https://mat.uab.cat/~masdeu/\">Marc Masdeu</a> (Barcelona)</li>
                          <li><a href=\"https://www.linkedin.com/in/bhavik-mehta-a60369148/\">Bhavik Mehta</a> (Cambridge)</li>
                          <li><a href=\"http://olivernash.org/\">Oliver Nash</a> (Imperial)</li>
                          <li><a href=\"https://pp.ipd.kit.edu/person.php?id=224\">Jakob von Raumer</a> (KIT)</li>
                          <li><a href=\"http://homepages.warwick.ac.uk/~maskal/\">Damiano Testa</a> (Warwick)</li>
                          <li><a href=\"https://ericwieser.me/\">Eric Wieser</a> (Cambridge)</li>
                      </ul>
                  <!--<p>
                    The number of participants for the tutorial is restricted.
                    Please <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfk2z96ry9qVHOYuJCcetx9NMP1v2xflJNbKzYOaqmLoASXbw/viewform?usp=sf_link\">apply</a> by May 31.
                  </p>
                  <p>
                    Participants will be able to book rooms at the <a href=\"https://www.wyndhamgardenduesseldorf.com/de\">Wyndham Garden</a> hotel
                    at a reduced price (Sunday till Saturday). Limited funds to support junior participants are available.
                  </p>-->
                  <!--<p>
                    <b>Registration for the tutorial is now closed.</b>  All applicants will receive a status update by email within the first half of June.  This email will also contain details regarding accommodation.
                  </p>-->
                  <p>
                    <strong>
                      While the initial registration deadline has passed, a handful of (unfunded) places is still available.  If interested, please apply as soon as possible by filling in <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfk2z96ry9qVHOYuJCcetx9NMP1v2xflJNbKzYOaqmLoASXbw/viewform?usp=sf_link\">this form</a>.
                    </strong>
                  </p>
                   
      
          </div>
      </section>


        <section class=\"container flow\" id=\"program\">
            <h2>Tentative Program</h2>
            <div class=\"schedule\">

              <table>
                <thead>
                    <tr><th colspan=\"2\">Monday, Sept 4, 2023</th></tr>
                </thead>
                <tbody>
                  <tr class=\"lecture\"><th>9:00–09:45</th><td>Welcome / Motivation</td></tr>
                  <tr class=\"lecture\"><th>09:45–10:30</th><td>Installation</td></tr>
                  <tr class=\"break\"><th></th><td>Coffee break</td></tr>
                  <tr class=\"lecture\"><th>11:00–11:45</th><td>Basics</td></tr>
                  <tr class=\"practice\"><th>11:45–12:30</th><td>Practice</td></tr>
                  <tr class=\"break\"><th></th><td>Lunch</td></tr>
                  <tr class=\"lecture\"><th>14:00–14:45</th><td>Logic</td></tr>
                  <tr class=\"practice\"><th>14:45-15:30</th><td>Practice</td></tr>
                  <tr class=\"break\"><th></th><td>Coffee break</td></tr>
                  <tr class=\"lecture\"><th>16:00–16:45</th><td>Project Coordination</td></tr>
                  <tr class=\"practice\"><th>16:45-17:30</th><td>Practice</td></tr>
                </tbody>
              </table>

              <table>
                <thead>
                    <tr><th colspan=\"2\">Tuesday, Sept 5, 2023</th></tr>
                </thead>
                <tbody>
                  <tr class=\"lecture\"> <th>9:00–09:45</th> <td>Sets and Functions</td></tr>
                  <tr class=\"practice\"><th>09:45–10:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Coffee break</td></tr>
                  <tr class=\"lecture\"> <th>11:00–11:45</th><td>Algebra Tactics</td></tr>
                  <tr class=\"practice\"><th>11:45–12:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Lunch</td></tr>
                  <tr class=\"lecture\"> <th>14:00–14:45</th><td>Structures and classes</td></tr>
                  <tr class=\"practice\"><th>14:45-15:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Coffee break</td></tr>
                  <tr class=\"lecture\"> <th>16:00–16:45</th><td>Algebraic hierarchy</td></tr>
                  <tr class=\"practice\"><th>16:45-17:30</th><td>Practice</td></tr>
                </tbody>
              </table>

              <table>
                <thead>
                    <tr><th colspan=\"2\">Wednesday, Sept 6, 2023</th></tr>
                </thead>
                <tbody>
                  <tr class=\"lecture\"> <th>9:00–09:45</th> <td>Topology</td></tr>
                  <tr class=\"practice\"><th>09:45–10:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Coffee break</td></tr>
                  <tr class=\"practice\"><th>11:00–12:30</th><td>Project work</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Lunch</td></tr>
                  <tr class=\"lecture\"> <th>14:00–14:45</th><td>Parallel sessions: Analysis | Combi­natorics</td></tr>
                  <tr class=\"practice\"><th>14:45-15:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Coffee break</td></tr>
                  <tr class=\"lecture\"> <th>16:00–16:45</th><td>Category theory</td></tr>
                  <tr class=\"practice\"><th>16:45-17:30</th><td>Practice</td></tr>
                </tbody>
              </table>
            
              <table>
                <thead>
                    <tr><th colspan=\"2\">Thursday, Sept 7, 2023</th></tr>
                </thead>
                <tbody>
                  <tr class=\"lecture\"> <th>9:00–09:45</th> <td>Algebraic Geometry</td></tr>
                  <tr class=\"practice\"><th>09:45–10:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Coffee break</td></tr>
                  <tr class=\"lecture\"> <th>11:00–11:45</th><td>Parallel sessions: Differential Geometry | Number theory</td></tr>
                  <tr class=\"practice\"><th>11:45–12:30</th><td>Practice</td></tr>
                  <tr class=\"break\">   <th></th>           <td>Lunch</td></tr>
                  <tr class=\"lecture\"> <th>14:00–14:45</th><td>Project debriefing</td></tr>
                  <tr class=\"colloquium\"><th>15:00-17:30</th><td><p class=\"title\"><a href=\"../colloquium/index.html\">Colloquium</a></p> </td></tr>
                </tbody>
              </table>

              <table>
                <thead>
                    <tr><th colspan=\"2\">Friday, Sept 8, 2023</th></tr>
                </thead>
                <tbody>
                  <tr class=\"colloquium\"><th>10:00-16:00</th><td><p class=\"title\"><a href=\"../colloquium/index.html\">Colloquium</a></p></td></tr>
                </tbody>
              </table>

            </div>
" 44 45 (face font-lock-function-name-face) 46 50 (face font-lock-variable-name-face) 51 144 (face font-lock-string-face) 157 158 (face font-lock-function-name-face) 188 189 (face font-lock-function-name-face) 190 194 (face font-lock-variable-name-face) 195 226 (face font-lock-string-face) 233 234 (face font-lock-function-name-face) 250 331 (fontified t) 331 332 (fontified t face font-lock-function-name-face) 332 333 (fontified t) 333 337 (fontified t face font-lock-variable-name-face) 337 338 (fontified t) 338 395 (fontified t face font-lock-string-face) 395 402 (fontified t) 402 403 (fontified t face font-lock-function-name-face) 403 406 (fontified t) 406 407 (fontified t face font-lock-function-name-face) 407 408 (fontified t) 408 412 (fontified t face font-lock-variable-name-face) 412 413 (fontified t) 413 448 (fontified t face font-lock-string-face) 448 456 (fontified t) 456 463 (fontified t) 463 464 (face font-lock-function-name-face fontified t) 464 467 (fontified t) 467 468 (face font-lock-function-name-face fontified t) 468 469 (fontified t) 469 473 (face font-lock-variable-name-face fontified t) 473 474 (fontified t) 474 536 (face font-lock-string-face fontified t) 536 547 (fontified t) 547 548 (face font-lock-function-name-face fontified t) 548 794 (fontified t) 794 795 (face font-lock-function-name-face fontified t) 795 813 (fontified t) 813 814 (face font-lock-function-name-face fontified t) 814 1173 (fontified t) 1173 1268 (fontified t) 1268 1292 (fontified t) 1292 1293 (face font-lock-function-name-face fontified t) 1293 1318 (fontified t) 1318 1319 (face font-lock-function-name-face fontified t) 1319 1325 (fontified t) 1325 1397 (fontified t) 1397 1492 (fontified t) 1492 1715 (fontified t) 1715 1716 (fontified t syntax-table (1)) 1716 1869 (fontified t) 1869 1870 (face font-lock-function-name-face fontified t) 1870 1895 (fontified t) 1895 1897 (face font-lock-function-name-face fontified t) 1897 1898 (fontified t) 1898 1905 (face (italic underline) fontified t) 1905 1907 (fontified t) 1907 1909 (face font-lock-function-name-face fontified t) 1909 1934 (fontified t) 1934 1936 (face font-lock-function-name-face fontified t) 1936 1956 (fontified t) 1956 1965 (fontified t) 1965 1967 (fontified t face font-lock-function-name-face) 1967 1969 (fontified t) 1969 1970 (fontified t face font-lock-function-name-face) 1970 1971 (fontified t) 1971 1975 (fontified t face font-lock-variable-name-face) 1975 1976 (fontified t) 1976 2008 (fontified t face font-lock-string-face) 2008 2023 (fontified t) 2023 2024 (fontified t face font-lock-function-name-face) 2024 2035 (fontified t) 2035 2037 (fontified t face font-lock-function-name-face) 2037 2039 (fontified t) 2039 2066 (fontified t) 2066 2068 (face font-lock-function-name-face fontified t) 2068 2070 (fontified t) 2070 2071 (face font-lock-function-name-face fontified t) 2071 2072 (fontified t) 2072 2076 (face font-lock-variable-name-face fontified t) 2076 2077 (fontified t) 2077 2105 (face font-lock-string-face fontified t) 2105 2124 (fontified t) 2124 2125 (face font-lock-function-name-face fontified t) 2125 2143 (fontified t) 2143 2145 (face font-lock-function-name-face fontified t) 2145 2174 (fontified t) 2174 2176 (face font-lock-function-name-face fontified t) 2176 2178 (fontified t) 2178 2179 (face font-lock-function-name-face fontified t) 2179 2180 (fontified t) 2180 2184 (face font-lock-variable-name-face fontified t) 2184 2185 (fontified t) 2185 2218 (face font-lock-string-face fontified t) 2218 2251 (fontified t) 2251 2252 (face font-lock-function-name-face fontified t) 2252 2264 (fontified t) 2264 2266 (face font-lock-function-name-face fontified t) 2266 2295 (fontified t) 2295 2297 (face font-lock-function-name-face fontified t) 2297 2299 (fontified t) 2299 2300 (face font-lock-function-name-face fontified t) 2300 2301 (fontified t) 2301 2305 (face font-lock-variable-name-face fontified t) 2305 2306 (fontified t) 2306 2336 (face font-lock-string-face fontified t) 2336 2350 (fontified t) 2350 2351 (face font-lock-function-name-face fontified t) 2351 2366 (fontified t) 2366 2368 (face font-lock-function-name-face fontified t) 2368 2397 (fontified t) 2397 2399 (face font-lock-function-name-face fontified t) 2399 2401 (fontified t) 2401 2402 (face font-lock-function-name-face fontified t) 2402 2403 (fontified t) 2403 2407 (face font-lock-variable-name-face fontified t) 2407 2408 (fontified t) 2408 2461 (face font-lock-string-face fontified t) 2461 2476 (fontified t) 2476 2477 (face font-lock-function-name-face fontified t) 2477 2492 (fontified t) 2492 2494 (face font-lock-function-name-face fontified t) 2494 2523 (fontified t) 2523 2525 (face font-lock-function-name-face fontified t) 2525 2527 (fontified t) 2527 2528 (face font-lock-function-name-face fontified t) 2528 2529 (fontified t) 2529 2533 (face font-lock-variable-name-face fontified t) 2533 2534 (fontified t) 2534 2558 (face font-lock-string-face fontified t) 2558 2572 (fontified t) 2572 2573 (face font-lock-function-name-face fontified t) 2573 2587 (fontified t) 2587 2589 (face font-lock-function-name-face fontified t) 2589 2618 (fontified t) 2618 2620 (face font-lock-function-name-face fontified t) 2620 2622 (fontified t) 2622 2623 (face font-lock-function-name-face fontified t) 2623 2624 (fontified t) 2624 2628 (face font-lock-variable-name-face fontified t) 2628 2629 (fontified t) 2629 2671 (face font-lock-string-face fontified t) 2671 2690 (fontified t) 2690 2691 (face font-lock-function-name-face fontified t) 2691 2700 (fontified t) 2700 2702 (face font-lock-function-name-face fontified t) 2702 2731 (fontified t) 2731 2733 (face font-lock-function-name-face fontified t) 2733 2735 (fontified t) 2735 2736 (face font-lock-function-name-face fontified t) 2736 2737 (fontified t) 2737 2741 (face font-lock-variable-name-face fontified t) 2741 2742 (fontified t) 2742 2783 (face font-lock-string-face fontified t) 2783 2799 (fontified t) 2799 2800 (face font-lock-function-name-face fontified t) 2800 2813 (fontified t) 2813 2815 (face font-lock-function-name-face fontified t) 2815 2844 (fontified t) 2844 2846 (face font-lock-function-name-face fontified t) 2846 2848 (fontified t) 2848 2849 (face font-lock-function-name-face fontified t) 2849 2850 (fontified t) 2850 2854 (face font-lock-variable-name-face fontified t) 2854 2855 (fontified t) 2855 2879 (face font-lock-string-face fontified t) 2879 2893 (fontified t) 2893 2894 (face font-lock-function-name-face fontified t) 2894 2909 (fontified t) 2909 2911 (face font-lock-function-name-face fontified t) 2911 2937 (fontified t) 2937 2939 (face font-lock-function-name-face fontified t) 2939 2959 (fontified t) 2959 2960 (face font-lock-comment-delimiter-face fontified t syntax-table (2097163)) 2960 2963 (face font-lock-comment-delimiter-face fontified t) 2963 2992 (face font-lock-comment-face fontified t) 2992 3046 (face font-lock-comment-face fontified t) 3046 3539 (face font-lock-comment-face fontified t) 3539 3552 (fontified t face font-lock-comment-face) 3552 3554 (fontified t face font-lock-comment-delimiter-face) 3554 3555 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164)) 3555 3556 (fontified t) 3556 3574 (fontified t) 3574 3575 (face font-lock-comment-delimiter-face fontified t syntax-table (2097163)) 3575 3578 (face font-lock-comment-delimiter-face fontified t) 3578 3605 (face font-lock-comment-face fontified t) 3605 3649 (face (bold font-lock-comment-face) fontified t) 3649 3824 (face font-lock-comment-face fontified t) 3824 3826 (face font-lock-comment-delimiter-face fontified t) 3826 3827 (face font-lock-comment-delimiter-face fontified t syntax-table (2097164)) 3827 3847 (fontified t) 3847 3848 (face font-lock-function-name-face fontified t) 3848 3871 (fontified t) 3871 3877 (face font-lock-function-name-face fontified t) 3877 4068 (fontified t) 4068 4069 (face font-lock-function-name-face fontified t) 4069 4070 (fontified t) 4070 4074 (face font-lock-variable-name-face fontified t) 4074 4075 (fontified t) 4075 4188 (face font-lock-string-face fontified t) 4188 4200 (fontified t) 4200 4201 (face font-lock-function-name-face fontified t) 4201 4226 (fontified t) 4226 4232 (face font-lock-function-name-face fontified t) 4232 4254 (fontified t) 4254 4255 (face font-lock-function-name-face fontified t) 4255 4296 (fontified t) 4296 4299 (face font-lock-function-name-face fontified t) 4299 4309 (fontified t) 4309 4316 (face font-lock-function-name-face fontified t) 4316 4329 (fontified t) 4329 4336 (face font-lock-function-name-face fontified t) 4336 4337 (fontified t) 4337 4342 (face font-lock-variable-name-face fontified t) 4342 4343 (fontified t) 4343 4359 (face font-lock-string-face fontified t) 4359 4360 (fontified t) 4360 4362 (face font-lock-variable-name-face fontified t) 4362 4363 (fontified t) 4363 4372 (face font-lock-string-face fontified t) 4372 4387 (fontified t) 4387 4389 (face font-lock-function-name-face fontified t) 4389 4390 (fontified t) 4390 4407 (face (bold-italic underline) fontified t) 4407 4409 (fontified t) 4409 4411 (face font-lock-function-name-face fontified t) 4411 4426 (fontified t) 4426 4429 (face font-lock-function-name-face fontified t) 4429 4430 (fontified t) 4430 4435 (face font-lock-variable-name-face fontified t) 4435 4436 (fontified t) 4436 4446 (face font-lock-string-face fontified t) 4446 4464 (fontified t) 4464 4469 (face font-lock-function-name-face fontified t) 4469 4488 (fontified t) 4488 4493 (face font-lock-function-name-face fontified t) 4493 4516 (fontified t) 4516 4518 (face font-lock-function-name-face fontified t) 4518 4520 (fontified t) 4520 4522 (face font-lock-function-name-face fontified t) 4522 4523 (fontified t) 4523 4530 (face font-lock-variable-name-face fontified t) 4530 4531 (fontified t) 4531 4534 (face font-lock-string-face fontified t) 4534 4546 (fontified t) 4546 4557 (fontified t) 4557 4559 (face font-lock-function-name-face fontified t) 4559 4562 (fontified t) 4562 4564 (face font-lock-function-name-face fontified t) 4564 4566 (fontified t) 4566 4584 (fontified t) 4584 4589 (face font-lock-function-name-face fontified t) 4589 4608 (fontified t) 4608 4613 (face font-lock-function-name-face fontified t) 4613 4634 (fontified t) 4634 4636 (face font-lock-function-name-face fontified t) 4636 4637 (fontified t) 4637 4642 (face font-lock-variable-name-face fontified t) 4642 4643 (fontified t) 4643 4652 (face font-lock-string-face fontified t) 4652 4654 (fontified t) 4654 4656 (face font-lock-function-name-face fontified t) 4656 4669 (fontified t) 4669 4671 (face font-lock-function-name-face fontified t) 4671 4673 (fontified t) 4673 4675 (face font-lock-function-name-face fontified t) 4675 4698 (fontified t) 4698 4700 (face font-lock-function-name-face fontified t) 4700 4703 (fontified t) 4703 4705 (face font-lock-function-name-face fontified t) 4705 4726 (fontified t) 4726 4728 (face font-lock-function-name-face fontified t) 4728 4729 (fontified t) 4729 4734 (face font-lock-variable-name-face fontified t) 4734 4735 (fontified t) 4735 4744 (face font-lock-string-face fontified t) 4744 4746 (fontified t) 4746 4748 (face font-lock-function-name-face fontified t) 4748 4762 (fontified t) 4762 4764 (face font-lock-function-name-face fontified t) 4764 4766 (fontified t) 4766 4768 (face font-lock-function-name-face fontified t) 4768 4783 (fontified t) 4783 4785 (face font-lock-function-name-face fontified t) 4785 4788 (fontified t) 4788 4790 (face font-lock-function-name-face fontified t) 4790 4811 (fontified t) 4811 4813 (face font-lock-function-name-face fontified t) 4813 4814 (fontified t) 4814 4819 (face font-lock-variable-name-face fontified t) 4819 4820 (fontified t) 4820 4827 (face font-lock-string-face fontified t) 4827 4829 (fontified t) 4829 4831 (face font-lock-function-name-face fontified t) 4831 4834 (fontified t) 4834 4836 (face font-lock-function-name-face fontified t) 4836 4838 (fontified t) 4838 4840 (face font-lock-function-name-face fontified t) 4840 4855 (fontified t) 4855 4857 (face font-lock-function-name-face fontified t) 4857 4860 (fontified t) 4860 4862 (face font-lock-function-name-face fontified t) 4862 4883 (fontified t) 4883 4885 (face font-lock-function-name-face fontified t) 4885 4886 (fontified t) 4886 4891 (face font-lock-variable-name-face fontified t) 4891 4892 (fontified t) 4892 4901 (face font-lock-string-face fontified t) 4901 4903 (fontified t) 4903 4905 (face font-lock-function-name-face fontified t) 4905 4919 (fontified t) 4919 4921 (face font-lock-function-name-face fontified t) 4921 4923 (fontified t) 4923 4925 (face font-lock-function-name-face fontified t) 4925 4934 (fontified t) 4934 4936 (face font-lock-function-name-face fontified t) 4936 4939 (fontified t) 4939 4941 (face font-lock-function-name-face fontified t) 4941 4962 (fontified t) 4962 4964 (face font-lock-function-name-face fontified t) 4964 4965 (fontified t) 4965 4970 (face font-lock-variable-name-face fontified t) 4970 4971 (fontified t) 4971 4981 (face font-lock-string-face fontified t) 4981 4983 (fontified t) 4983 4985 (face font-lock-function-name-face fontified t) 4985 4999 (fontified t) 4999 5001 (face font-lock-function-name-face fontified t) 5001 5003 (fontified t) 5003 5005 (face font-lock-function-name-face fontified t) 5005 5016 (fontified t) 5016 5018 (face font-lock-function-name-face fontified t) 5018 5021 (fontified t) 5021 5023 (face font-lock-function-name-face fontified t) 5023 5044 (fontified t) 5044 5046 (face font-lock-function-name-face fontified t) 5046 5047 (fontified t) 5047 5052 (face font-lock-variable-name-face fontified t) 5052 5053 (fontified t) 5053 5056 (face font-lock-string-face fontified t) 5056 5060 (fontified t face font-lock-string-face) 5060 5062 (fontified t) 5062 5064 (fontified t face font-lock-function-name-face) 5064 5067 (fontified t) 5067 5069 (fontified t face font-lock-function-name-face) 5069 5071 (fontified t) 5071 5073 (fontified t face font-lock-function-name-face) 5073 5081 (fontified t) 5081 5083 (fontified t face font-lock-function-name-face) 5083 5086 (fontified t) 5086 5088 (fontified t face font-lock-function-name-face) 5088 5090 (fontified t) 5090 5109 (fontified t) 5109 5111 (face font-lock-function-name-face fontified t) 5111 5112 (fontified t) 5112 5117 (face font-lock-variable-name-face fontified t) 5117 5118 (fontified t) 5118 5127 (face font-lock-string-face fontified t) 5127 5129 (fontified t) 5129 5131 (face font-lock-function-name-face fontified t) 5131 5145 (fontified t) 5145 5147 (face font-lock-function-name-face fontified t) 5147 5149 (fontified t) 5149 5151 (face font-lock-function-name-face fontified t) 5151 5159 (fontified t) 5159 5161 (face font-lock-function-name-face fontified t) 5161 5164 (fontified t) 5164 5166 (face font-lock-function-name-face fontified t) 5166 5187 (fontified t) 5187 5189 (face font-lock-function-name-face fontified t) 5189 5190 (fontified t) 5190 5195 (face font-lock-variable-name-face fontified t) 5195 5196 (fontified t) 5196 5206 (face font-lock-string-face fontified t) 5206 5208 (fontified t) 5208 5210 (face font-lock-function-name-face fontified t) 5210 5224 (fontified t) 5224 5226 (face font-lock-function-name-face fontified t) 5226 5228 (fontified t) 5228 5230 (face font-lock-function-name-face fontified t) 5230 5241 (fontified t) 5241 5243 (face font-lock-function-name-face fontified t) 5243 5246 (fontified t) 5246 5248 (face font-lock-function-name-face fontified t) 5248 5269 (fontified t) 5269 5271 (face font-lock-function-name-face fontified t) 5271 5272 (fontified t) 5272 5277 (face font-lock-variable-name-face fontified t) 5277 5278 (fontified t) 5278 5285 (face font-lock-string-face fontified t) 5285 5287 (fontified t) 5287 5289 (face font-lock-function-name-face fontified t) 5289 5292 (fontified t) 5292 5294 (face font-lock-function-name-face fontified t) 5294 5296 (fontified t) 5296 5298 (face font-lock-function-name-face fontified t) 5298 5313 (fontified t) 5313 5315 (face font-lock-function-name-face fontified t) 5315 5318 (fontified t) 5318 5320 (face font-lock-function-name-face fontified t) 5320 5341 (fontified t) 5341 5343 (face font-lock-function-name-face fontified t) 5343 5344 (fontified t) 5344 5349 (face font-lock-variable-name-face fontified t) 5349 5350 (fontified t) 5350 5359 (face font-lock-string-face fontified t) 5359 5361 (fontified t) 5361 5363 (face font-lock-function-name-face fontified t) 5363 5377 (fontified t) 5377 5379 (face font-lock-function-name-face fontified t) 5379 5381 (fontified t) 5381 5383 (face font-lock-function-name-face fontified t) 5383 5406 (fontified t) 5406 5408 (face font-lock-function-name-face fontified t) 5408 5411 (fontified t) 5411 5413 (face font-lock-function-name-face fontified t) 5413 5434 (fontified t) 5434 5436 (face font-lock-function-name-face fontified t) 5436 5437 (fontified t) 5437 5442 (face font-lock-variable-name-face fontified t) 5442 5443 (fontified t) 5443 5453 (face font-lock-string-face fontified t) 5453 5455 (fontified t) 5455 5457 (face font-lock-function-name-face fontified t) 5457 5471 (fontified t) 5471 5473 (face font-lock-function-name-face fontified t) 5473 5475 (fontified t) 5475 5477 (face font-lock-function-name-face fontified t) 5477 5488 (fontified t) 5488 5490 (face font-lock-function-name-face fontified t) 5490 5493 (fontified t) 5493 5495 (face font-lock-function-name-face fontified t) 5495 5515 (fontified t) 5515 5520 (face font-lock-function-name-face fontified t) 5520 5538 (fontified t) 5538 5543 (face font-lock-function-name-face fontified t) 5543 5561 (fontified t) 5561 5566 (face font-lock-function-name-face fontified t) 5566 5585 (fontified t) 5585 5590 (face font-lock-function-name-face fontified t) 5590 5613 (fontified t) 5613 5615 (face font-lock-function-name-face fontified t) 5615 5617 (fontified t) 5617 5619 (face font-lock-function-name-face fontified t) 5619 5620 (fontified t) 5620 5627 (face font-lock-variable-name-face fontified t) 5627 5628 (fontified t) 5628 5631 (face font-lock-string-face fontified t) 5631 5655 (fontified t) 5655 5657 (face font-lock-function-name-face fontified t) 5657 5660 (fontified t) 5660 5662 (face font-lock-function-name-face fontified t) 5662 5682 (fontified t) 5682 5687 (face font-lock-function-name-face fontified t) 5687 5706 (fontified t) 5706 5711 (face font-lock-function-name-face fontified t) 5711 5732 (fontified t) 5732 5734 (face font-lock-function-name-face fontified t) 5734 5735 (fontified t) 5735 5740 (face font-lock-variable-name-face fontified t) 5740 5741 (fontified t) 5741 5750 (face font-lock-string-face fontified t) 5750 5753 (fontified t) 5753 5755 (face font-lock-function-name-face fontified t) 5755 5768 (fontified t) 5768 5770 (face font-lock-function-name-face fontified t) 5770 5773 (fontified t) 5773 5775 (face font-lock-function-name-face fontified t) 5775 5796 (fontified t) 5796 5798 (face font-lock-function-name-face fontified t) 5798 5801 (fontified t) 5801 5803 (face font-lock-function-name-face fontified t) 5803 5824 (fontified t) 5824 5826 (face font-lock-function-name-face fontified t) 5826 5827 (fontified t) 5827 5832 (face font-lock-variable-name-face fontified t) 5832 5833 (fontified t) 5833 5843 (face font-lock-string-face fontified t) 5843 5845 (fontified t) 5845 5847 (face font-lock-function-name-face fontified t) 5847 5861 (fontified t) 5861 5863 (face font-lock-function-name-face fontified t) 5863 5865 (fontified t) 5865 5867 (face font-lock-function-name-face fontified t) 5867 5878 (fontified t) 5878 5880 (face font-lock-function-name-face fontified t) 5880 5883 (fontified t) 5883 5885 (face font-lock-function-name-face fontified t) 5885 5906 (fontified t) 5906 5908 (face font-lock-function-name-face fontified t) 5908 5909 (fontified t) 5909 5914 (face font-lock-variable-name-face fontified t) 5914 5915 (fontified t) 5915 5922 (face font-lock-string-face fontified t) 5922 5927 (fontified t) 5927 5929 (face font-lock-function-name-face fontified t) 5929 5932 (fontified t) 5932 5934 (face font-lock-function-name-face fontified t) 5934 5947 (fontified t) 5947 5949 (face font-lock-function-name-face fontified t) 5949 5964 (fontified t) 5964 5966 (face font-lock-function-name-face fontified t) 5966 5969 (fontified t) 5969 5971 (face font-lock-function-name-face fontified t) 5971 5992 (fontified t) 5992 5994 (face font-lock-function-name-face fontified t) 5994 5995 (fontified t) 5995 6000 (face font-lock-variable-name-face fontified t) 6000 6001 (fontified t) 6001 6010 (face font-lock-string-face fontified t) 6010 6013 (fontified t) 6013 6015 (face font-lock-function-name-face fontified t) 6015 6029 (fontified t) 6029 6031 (face font-lock-function-name-face fontified t) 6031 6033 (fontified t) 6033 6035 (face font-lock-function-name-face fontified t) 6035 6053 (fontified t) 6053 6055 (face font-lock-function-name-face fontified t) 6055 6058 (fontified t) 6058 6060 (face font-lock-function-name-face fontified t) 6060 6081 (fontified t) 6081 6083 (face font-lock-function-name-face fontified t) 6083 6084 (fontified t) 6084 6089 (face font-lock-variable-name-face fontified t) 6089 6090 (fontified t) 6090 6100 (face font-lock-string-face fontified t) 6100 6102 (fontified t) 6102 6104 (face font-lock-function-name-face fontified t) 6104 6118 (fontified t) 6118 6120 (face font-lock-function-name-face fontified t) 6120 6122 (fontified t) 6122 6124 (face font-lock-function-name-face fontified t) 6124 6135 (fontified t) 6135 6137 (face font-lock-function-name-face fontified t) 6137 6140 (fontified t) 6140 6142 (face font-lock-function-name-face fontified t) 6142 6163 (fontified t) 6163 6165 (face font-lock-function-name-face fontified t) 6165 6166 (fontified t) 6166 6171 (face font-lock-variable-name-face fontified t) 6171 6172 (fontified t) 6172 6179 (face font-lock-string-face fontified t) 6179 6184 (fontified t) 6184 6186 (face font-lock-function-name-face fontified t) 6186 6189 (fontified t) 6189 6191 (face font-lock-function-name-face fontified t) 6191 6204 (fontified t) 6204 6206 (face font-lock-function-name-face fontified t) 6206 6214 (fontified t) 6214 6216 (face font-lock-function-name-face fontified t) 6216 6219 (fontified t) 6219 6221 (face font-lock-function-name-face fontified t) 6221 6242 (fontified t) 6242 6244 (face font-lock-function-name-face fontified t) 6244 6245 (fontified t) 6245 6250 (face font-lock-variable-name-face fontified t) 6250 6251 (fontified t) 6251 6260 (face font-lock-string-face fontified t) 6260 6263 (fontified t) 6263 6265 (face font-lock-function-name-face fontified t) 6265 6279 (fontified t) 6279 6281 (face font-lock-function-name-face fontified t) 6281 6283 (fontified t) 6283 6285 (face font-lock-function-name-face fontified t) 6285 6310 (fontified t) 6310 6312 (face font-lock-function-name-face fontified t) 6312 6315 (fontified t) 6315 6317 (face font-lock-function-name-face fontified t) 6317 6338 (fontified t) 6338 6340 (face font-lock-function-name-face fontified t) 6340 6341 (fontified t) 6341 6346 (face font-lock-variable-name-face fontified t) 6346 6347 (fontified t) 6347 6357 (face font-lock-string-face fontified t) 6357 6359 (fontified t) 6359 6361 (face font-lock-function-name-face fontified t) 6361 6375 (fontified t) 6375 6377 (face font-lock-function-name-face fontified t) 6377 6379 (fontified t) 6379 6381 (face font-lock-function-name-face fontified t) 6381 6392 (fontified t) 6392 6394 (face font-lock-function-name-face fontified t) 6394 6397 (fontified t) 6397 6399 (face font-lock-function-name-face fontified t) 6399 6420 (fontified t) 6420 6422 (face font-lock-function-name-face fontified t) 6422 6423 (fontified t) 6423 6428 (face font-lock-variable-name-face fontified t) 6428 6429 (fontified t) 6429 6436 (face font-lock-string-face fontified t) 6436 6441 (fontified t) 6441 6443 (face font-lock-function-name-face fontified t) 6443 6446 (fontified t) 6446 6448 (face font-lock-function-name-face fontified t) 6448 6461 (fontified t) 6461 6463 (face font-lock-function-name-face fontified t) 6463 6478 (fontified t) 6478 6480 (face font-lock-function-name-face fontified t) 6480 6483 (fontified t) 6483 6485 (face font-lock-function-name-face fontified t) 6485 6506 (fontified t) 6506 6508 (face font-lock-function-name-face fontified t) 6508 6509 (fontified t) 6509 6514 (face font-lock-variable-name-face fontified t) 6514 6515 (fontified t) 6515 6524 (face font-lock-string-face fontified t) 6524 6527 (fontified t) 6527 6529 (face font-lock-function-name-face fontified t) 6529 6543 (fontified t) 6543 6545 (face font-lock-function-name-face fontified t) 6545 6547 (fontified t) 6547 6549 (face font-lock-function-name-face fontified t) 6549 6571 (fontified t) 6571 6573 (face font-lock-function-name-face fontified t) 6573 6576 (fontified t) 6576 6578 (face font-lock-function-name-face fontified t) 6578 6590 (fontified t) 6590 6599 (fontified t) 6599 6601 (fontified t face font-lock-function-name-face) 6601 6602 (fontified t) 6602 6607 (fontified t face font-lock-variable-name-face) 6607 6608 (fontified t) 6608 6618 (fontified t face font-lock-string-face) 6618 6620 (fontified t) 6620 6622 (fontified t face font-lock-function-name-face) 6622 6636 (fontified t) 6636 6638 (fontified t face font-lock-function-name-face) 6638 6640 (fontified t) 6640 6642 (fontified t face font-lock-function-name-face) 6642 6653 (fontified t) 6653 6655 (fontified t face font-lock-function-name-face) 6655 6658 (fontified t) 6658 6660 (fontified t face font-lock-function-name-face) 6660 6662 (fontified t) 6662 6680 (fontified t) 6680 6685 (face font-lock-function-name-face fontified t) 6685 6703 (fontified t) 6703 6708 (face font-lock-function-name-face fontified t) 6708 6726 (fontified t) 6726 6731 (face font-lock-function-name-face fontified t) 6731 6750 (fontified t) 6750 6755 (face font-lock-function-name-face fontified t) 6755 6778 (fontified t) 6778 6780 (face font-lock-function-name-face fontified t) 6780 6782 (fontified t) 6782 6784 (face font-lock-function-name-face fontified t) 6784 6785 (fontified t) 6785 6792 (face font-lock-variable-name-face fontified t) 6792 6793 (fontified t) 6793 6796 (face font-lock-string-face fontified t) 6796 6822 (fontified t) 6822 6824 (face font-lock-function-name-face fontified t) 6824 6827 (fontified t) 6827 6829 (face font-lock-function-name-face fontified t) 6829 6849 (fontified t) 6849 6854 (face font-lock-function-name-face fontified t) 6854 6873 (fontified t) 6873 6878 (face font-lock-function-name-face fontified t) 6878 6899 (fontified t) 6899 6901 (face font-lock-function-name-face fontified t) 6901 6902 (fontified t) 6902 6907 (face font-lock-variable-name-face fontified t) 6907 6908 (fontified t) 6908 6917 (face font-lock-string-face fontified t) 6917 6920 (fontified t) 6920 6922 (face font-lock-function-name-face fontified t) 6922 6935 (fontified t) 6935 6937 (face font-lock-function-name-face fontified t) 6937 6940 (fontified t) 6940 6942 (face font-lock-function-name-face fontified t) 6942 6953 (fontified t) 6953 6955 (face font-lock-function-name-face fontified t) 6955 6958 (fontified t) 6958 6960 (face font-lock-function-name-face fontified t) 6960 6981 (fontified t) 6981 6983 (face font-lock-function-name-face fontified t) 6983 6984 (fontified t) 6984 6989 (face font-lock-variable-name-face fontified t) 6989 6990 (fontified t) 6990 7000 (face font-lock-string-face fontified t) 7000 7002 (fontified t) 7002 7004 (face font-lock-function-name-face fontified t) 7004 7018 (fontified t) 7018 7020 (face font-lock-function-name-face fontified t) 7020 7022 (fontified t) 7022 7024 (face font-lock-function-name-face fontified t) 7024 7035 (fontified t) 7035 7037 (face font-lock-function-name-face fontified t) 7037 7040 (fontified t) 7040 7042 (face font-lock-function-name-face fontified t) 7042 7063 (fontified t) 7063 7065 (face font-lock-function-name-face fontified t) 7065 7066 (fontified t) 7066 7071 (face font-lock-variable-name-face fontified t) 7071 7072 (fontified t) 7072 7079 (face font-lock-string-face fontified t) 7079 7084 (fontified t) 7084 7086 (face font-lock-function-name-face fontified t) 7086 7089 (fontified t) 7089 7091 (face font-lock-function-name-face fontified t) 7091 7104 (fontified t) 7104 7106 (face font-lock-function-name-face fontified t) 7106 7121 (fontified t) 7121 7123 (face font-lock-function-name-face fontified t) 7123 7126 (fontified t) 7126 7128 (face font-lock-function-name-face fontified t) 7128 7149 (fontified t) 7149 7151 (face font-lock-function-name-face fontified t) 7151 7152 (fontified t) 7152 7157 (face font-lock-variable-name-face fontified t) 7157 7158 (fontified t) 7158 7168 (face font-lock-string-face fontified t) 7168 7170 (fontified t) 7170 7172 (face font-lock-function-name-face fontified t) 7172 7186 (fontified t) 7186 7188 (face font-lock-function-name-face fontified t) 7188 7190 (fontified t) 7190 7192 (face font-lock-function-name-face fontified t) 7192 7207 (fontified t) 7207 7209 (face font-lock-function-name-face fontified t) 7209 7212 (fontified t) 7212 7214 (face font-lock-function-name-face fontified t) 7214 7235 (fontified t) 7235 7237 (face font-lock-function-name-face fontified t) 7237 7238 (fontified t) 7238 7243 (face font-lock-variable-name-face fontified t) 7243 7244 (fontified t) 7244 7251 (face font-lock-string-face fontified t) 7251 7256 (fontified t) 7256 7258 (face font-lock-function-name-face fontified t) 7258 7261 (fontified t) 7261 7263 (face font-lock-function-name-face fontified t) 7263 7276 (fontified t) 7276 7278 (face font-lock-function-name-face fontified t) 7278 7286 (fontified t) 7286 7288 (face font-lock-function-name-face fontified t) 7288 7291 (fontified t) 7291 7293 (face font-lock-function-name-face fontified t) 7293 7314 (fontified t) 7314 7316 (face font-lock-function-name-face fontified t) 7316 7317 (fontified t) 7317 7322 (face font-lock-variable-name-face fontified t) 7322 7323 (fontified t) 7323 7332 (face font-lock-string-face fontified t) 7332 7335 (fontified t) 7335 7337 (face font-lock-function-name-face fontified t) 7337 7351 (fontified t) 7351 7353 (face font-lock-function-name-face fontified t) 7353 7355 (fontified t) 7355 7357 (face font-lock-function-name-face fontified t) 7357 7404 (fontified t) 7404 7406 (face font-lock-function-name-face fontified t) 7406 7409 (fontified t) 7409 7411 (face font-lock-function-name-face fontified t) 7411 7432 (fontified t) 7432 7434 (face font-lock-function-name-face fontified t) 7434 7435 (fontified t) 7435 7440 (face font-lock-variable-name-face fontified t) 7440 7441 (fontified t) 7441 7451 (face font-lock-string-face fontified t) 7451 7453 (fontified t) 7453 7455 (face font-lock-function-name-face fontified t) 7455 7469 (fontified t) 7469 7471 (face font-lock-function-name-face fontified t) 7471 7473 (fontified t) 7473 7475 (face font-lock-function-name-face fontified t) 7475 7486 (fontified t) 7486 7488 (face font-lock-function-name-face fontified t) 7488 7491 (fontified t) 7491 7493 (face font-lock-function-name-face fontified t) 7493 7514 (fontified t) 7514 7516 (face font-lock-function-name-face fontified t) 7516 7517 (fontified t) 7517 7522 (face font-lock-variable-name-face fontified t) 7522 7523 (fontified t) 7523 7530 (face font-lock-string-face fontified t) 7530 7535 (fontified t) 7535 7537 (face font-lock-function-name-face fontified t) 7537 7540 (fontified t) 7540 7542 (face font-lock-function-name-face fontified t) 7542 7555 (fontified t) 7555 7557 (face font-lock-function-name-face fontified t) 7557 7572 (fontified t) 7572 7574 (face font-lock-function-name-face fontified t) 7574 7577 (fontified t) 7577 7579 (face font-lock-function-name-face fontified t) 7579 7600 (fontified t) 7600 7602 (face font-lock-function-name-face fontified t) 7602 7603 (fontified t) 7603 7608 (face font-lock-variable-name-face fontified t) 7608 7609 (fontified t) 7609 7618 (face font-lock-string-face fontified t) 7618 7621 (fontified t) 7621 7623 (face font-lock-function-name-face fontified t) 7623 7637 (fontified t) 7637 7639 (face font-lock-function-name-face fontified t) 7639 7641 (fontified t) 7641 7643 (face font-lock-function-name-face fontified t) 7643 7661 (fontified t) 7661 7663 (face font-lock-function-name-face fontified t) 7663 7666 (fontified t) 7666 7668 (face font-lock-function-name-face fontified t) 7668 7689 (fontified t) 7689 7691 (face font-lock-function-name-face fontified t) 7691 7692 (fontified t) 7692 7697 (face font-lock-variable-name-face fontified t) 7697 7698 (fontified t) 7698 7708 (face font-lock-string-face fontified t) 7708 7710 (fontified t) 7710 7712 (face font-lock-function-name-face fontified t) 7712 7726 (fontified t) 7726 7728 (face font-lock-function-name-face fontified t) 7728 7730 (fontified t) 7730 7732 (face font-lock-function-name-face fontified t) 7732 7743 (fontified t) 7743 7745 (face font-lock-function-name-face fontified t) 7745 7748 (fontified t) 7748 7750 (face font-lock-function-name-face fontified t) 7750 7770 (fontified t) 7770 7775 (face font-lock-function-name-face fontified t) 7775 7793 (fontified t) 7793 7798 (face font-lock-function-name-face fontified t) 7798 7828 (fontified t) 7828 7833 (face font-lock-function-name-face fontified t) 7833 7852 (fontified t) 7852 7857 (face font-lock-function-name-face fontified t) 7857 7880 (fontified t) 7880 7882 (face font-lock-function-name-face fontified t) 7882 7884 (fontified t) 7884 7886 (face font-lock-function-name-face fontified t) 7886 7887 (fontified t) 7887 7894 (face font-lock-variable-name-face fontified t) 7894 7895 (fontified t) 7895 7898 (face font-lock-string-face fontified t) 7898 7923 (fontified t) 7923 7925 (face font-lock-function-name-face fontified t) 7925 7928 (fontified t) 7928 7930 (face font-lock-function-name-face fontified t) 7930 7950 (fontified t) 7950 7955 (face font-lock-function-name-face fontified t) 7955 7974 (fontified t) 7974 7979 (face font-lock-function-name-face fontified t) 7979 8000 (fontified t) 8000 8002 (face font-lock-function-name-face fontified t) 8002 8003 (fontified t) 8003 8008 (face font-lock-variable-name-face fontified t) 8008 8009 (fontified t) 8009 8018 (face font-lock-string-face fontified t) 8018 8021 (fontified t) 8021 8023 (face font-lock-function-name-face fontified t) 8023 8036 (fontified t) 8036 8038 (face font-lock-function-name-face fontified t) 8038 8041 (fontified t) 8041 8043 (face font-lock-function-name-face fontified t) 8043 8064 (fontified t) 8064 8066 (face font-lock-function-name-face fontified t) 8066 8069 (fontified t) 8069 8071 (face font-lock-function-name-face fontified t) 8071 8092 (fontified t) 8092 8094 (face font-lock-function-name-face fontified t) 8094 8095 (fontified t) 8095 8100 (face font-lock-variable-name-face fontified t) 8100 8101 (fontified t) 8101 8111 (face font-lock-string-face fontified t) 8111 8113 (fontified t) 8113 8115 (face font-lock-function-name-face fontified t) 8115 8129 (fontified t) 8129 8131 (face font-lock-function-name-face fontified t) 8131 8133 (fontified t) 8133 8135 (face font-lock-function-name-face fontified t) 8135 8146 (fontified t) 8146 8148 (face font-lock-function-name-face fontified t) 8148 8151 (fontified t) 8151 8153 (face font-lock-function-name-face fontified t) 8153 8162 (fontified t) 8162 8174 (fontified t) 8174 8176 (fontified t face font-lock-function-name-face) 8176 8177 (fontified t) 8177 8182 (fontified t face font-lock-variable-name-face) 8182 8183 (fontified t) 8183 8190 (fontified t face font-lock-string-face) 8190 8195 (fontified t) 8195 8197 (fontified t face font-lock-function-name-face) 8197 8200 (fontified t) 8200 8202 (fontified t face font-lock-function-name-face) 8202 8215 (fontified t) 8215 8217 (fontified t face font-lock-function-name-face) 8217 8232 (fontified t) 8232 8234 (fontified t face font-lock-function-name-face) 8234 8237 (fontified t) 8237 8239 (fontified t face font-lock-function-name-face) 8239 8241 (fontified t) 8241 8260 (fontified t) 8260 8262 (face font-lock-function-name-face fontified t) 8262 8263 (fontified t) 8263 8268 (face font-lock-variable-name-face fontified t) 8268 8269 (fontified t) 8269 8278 (face font-lock-string-face fontified t) 8278 8281 (fontified t) 8281 8283 (face font-lock-function-name-face fontified t) 8283 8297 (fontified t) 8297 8299 (face font-lock-function-name-face fontified t) 8299 8301 (fontified t) 8301 8303 (face font-lock-function-name-face fontified t) 8303 8362 (fontified t) 8362 8364 (face font-lock-function-name-face fontified t) 8364 8367 (fontified t) 8367 8369 (face font-lock-function-name-face fontified t) 8369 8390 (fontified t) 8390 8392 (face font-lock-function-name-face fontified t) 8392 8393 (fontified t) 8393 8398 (face font-lock-variable-name-face fontified t) 8398 8399 (fontified t) 8399 8409 (face font-lock-string-face fontified t) 8409 8411 (fontified t) 8411 8413 (face font-lock-function-name-face fontified t) 8413 8427 (fontified t) 8427 8429 (face font-lock-function-name-face fontified t) 8429 8431 (fontified t) 8431 8433 (face font-lock-function-name-face fontified t) 8433 8444 (fontified t) 8444 8446 (face font-lock-function-name-face fontified t) 8446 8449 (fontified t) 8449 8451 (face font-lock-function-name-face fontified t) 8451 8472 (fontified t) 8472 8474 (face font-lock-function-name-face fontified t) 8474 8475 (fontified t) 8475 8480 (face font-lock-variable-name-face fontified t) 8480 8481 (fontified t) 8481 8488 (face font-lock-string-face fontified t) 8488 8493 (fontified t) 8493 8495 (face font-lock-function-name-face fontified t) 8495 8498 (fontified t) 8498 8500 (face font-lock-function-name-face fontified t) 8500 8513 (fontified t) 8513 8515 (face font-lock-function-name-face fontified t) 8515 8523 (fontified t) 8523 8525 (face font-lock-function-name-face fontified t) 8525 8528 (fontified t) 8528 8530 (face font-lock-function-name-face fontified t) 8530 8551 (fontified t) 8551 8553 (face font-lock-function-name-face fontified t) 8553 8554 (fontified t) 8554 8559 (face font-lock-variable-name-face fontified t) 8559 8560 (fontified t) 8560 8569 (face font-lock-string-face fontified t) 8569 8572 (fontified t) 8572 8574 (face font-lock-function-name-face fontified t) 8574 8588 (fontified t) 8588 8590 (face font-lock-function-name-face fontified t) 8590 8592 (fontified t) 8592 8594 (face font-lock-function-name-face fontified t) 8594 8615 (fontified t) 8615 8617 (face font-lock-function-name-face fontified t) 8617 8620 (fontified t) 8620 8622 (face font-lock-function-name-face fontified t) 8622 8643 (fontified t) 8643 8645 (face font-lock-function-name-face fontified t) 8645 8646 (fontified t) 8646 8651 (face font-lock-variable-name-face fontified t) 8651 8652 (fontified t) 8652 8664 (face font-lock-string-face fontified t) 8664 8666 (fontified t) 8666 8668 (face font-lock-function-name-face fontified t) 8668 8682 (fontified t) 8682 8684 (face font-lock-function-name-face fontified t) 8684 8686 (fontified t) 8686 8688 (face font-lock-function-name-face fontified t) 8688 8690 (fontified t) 8690 8691 (face font-lock-function-name-face fontified t) 8691 8692 (fontified t) 8692 8697 (face font-lock-variable-name-face fontified t) 8697 8698 (fontified t) 8698 8705 (face font-lock-string-face fontified t) 8705 8707 (fontified t) 8707 8708 (face font-lock-function-name-face fontified t) 8708 8709 (fontified t) 8709 8713 (face font-lock-variable-name-face fontified t) 8713 8714 (fontified t) 8714 8740 (face font-lock-string-face fontified t) 8740 8753 (fontified t) 8753 8754 (face font-lock-function-name-face fontified t) 8754 8757 (fontified t) 8757 8758 (face font-lock-function-name-face fontified t) 8758 8762 (fontified t) 8762 8764 (face font-lock-function-name-face fontified t) 8764 8767 (fontified t) 8767 8769 (face font-lock-function-name-face fontified t) 8769 8789 (fontified t) 8789 8794 (face font-lock-function-name-face fontified t) 8794 8812 (fontified t) 8812 8817 (face font-lock-function-name-face fontified t) 8817 8835 (fontified t) 8835 8840 (face font-lock-function-name-face fontified t) 8840 8859 (fontified t) 8859 8864 (face font-lock-function-name-face fontified t) 8864 8887 (fontified t) 8887 8889 (face font-lock-function-name-face fontified t) 8889 8891 (fontified t) 8891 8893 (face font-lock-function-name-face fontified t) 8893 8894 (fontified t) 8894 8901 (face font-lock-variable-name-face fontified t) 8901 8902 (fontified t) 8902 8905 (face font-lock-string-face fontified t) 8905 8928 (fontified t) 8928 8930 (face font-lock-function-name-face fontified t) 8930 8933 (fontified t) 8933 8935 (face font-lock-function-name-face fontified t) 8935 8955 (fontified t) 8955 8960 (face font-lock-function-name-face fontified t) 8960 8979 (fontified t) 8979 8984 (face font-lock-function-name-face fontified t) 8984 9005 (fontified t) 9005 9007 (face font-lock-function-name-face fontified t) 9007 9008 (fontified t) 9008 9013 (face font-lock-variable-name-face fontified t) 9013 9014 (fontified t) 9014 9026 (face font-lock-string-face fontified t) 9026 9028 (fontified t) 9028 9030 (face font-lock-function-name-face fontified t) 9030 9044 (fontified t) 9044 9046 (face font-lock-function-name-face fontified t) 9046 9048 (fontified t) 9048 9050 (face font-lock-function-name-face fontified t) 9050 9052 (fontified t) 9052 9053 (face font-lock-function-name-face fontified t) 9053 9054 (fontified t) 9054 9059 (face font-lock-variable-name-face fontified t) 9059 9060 (fontified t) 9060 9067 (face font-lock-string-face fontified t) 9067 9069 (fontified t) 9069 9070 (face font-lock-function-name-face fontified t) 9070 9071 (fontified t) 9071 9075 (face font-lock-variable-name-face fontified t) 9075 9076 (fontified t) 9076 9102 (face font-lock-string-face fontified t) 9102 9115 (fontified t) 9115 9116 (face font-lock-function-name-face fontified t) 9116 9119 (fontified t) 9119 9120 (face font-lock-function-name-face fontified t) 9120 9123 (fontified t) 9123 9125 (face font-lock-function-name-face fontified t) 9125 9128 (fontified t) 9128 9130 (face font-lock-function-name-face fontified t) 9130 9150 (fontified t) 9150 9155 (face font-lock-function-name-face fontified t) 9155 9173 (fontified t) 9173 9178 (face font-lock-function-name-face fontified t) 9178 9195 (fontified t) 9195 9198 (face font-lock-function-name-face fontified t) 9198 9200 (fontified t)) . 1731) (undo-tree-id15 . -7495) (undo-tree-id16 . -9200) (undo-tree-id17 . -9200) (undo-tree-id18 . -250) (undo-tree-id19 . -456) (undo-tree-id20 . -9200) (undo-tree-id21 . -9200) 10931 (t 25774 34994 863122 694000)) nil (25774 35010 661434 287000) 0 nil])
([nil nil ((1730 . 1747) (t 25774 35010 687218 928000)) nil (25774 35021 751513 962000) 0 nil])
([nil nil ((1747 . 1748)) nil (25774 35021 751513 711000) 0 nil])
([nil nil ((1748 . 1749)) nil (25774 35021 751513 455000) 0 nil])
([nil nil ((1749 . 1751)) nil (25774 35021 751513 177000) 0 nil])
([nil nil ((#("                " 0 16 (hilit-chg hilit-chg fontified t)) . -1731) (undo-tree-id48 . -16) (undo-tree-id49 . -16) (undo-tree-id50 . -16) 1751) nil (25774 35021 751512 733000) 0 nil])
([nil nil ((#("/" 0 1 (hilit-chg hilit-chg fontified t)) . -1732) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("~" 0 1 (hilit-chg hilit-chg fontified t)) . -1733) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(">" 0 1 (hilit-chg hilit-chg fontified t)) . -1734) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . 1) (undo-tree-id47 . -1) 1735) nil (25774 35021 751510 800000) 0 nil])
([nil nil ((1732 . 1734)) nil (25774 35021 751502 877000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified t)) . -1732) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(">" 0 1 (hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified t)) . -1733) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -1) 1734) nil (25774 35021 751501 469000) 0 nil])
([nil nil ((1732 . 1733)) nil (25774 35021 751484 107000) 0 nil])
([nil nil ((1733 . 1735)) nil (25774 35021 751483 323000) 0 nil])
([nil nil ((1731 . 1745) 1735) nil (25774 35021 751482 295000) 0 nil])
([nil nil ((1730 . 1747)) nil (25774 35021 751481 389000) 0 nil])
([nil nil ((1747 . 1768)) nil (25774 35021 751480 633000) 0 nil])
([nil nil ((1768 . 1776)) nil (25774 35021 751475 558000) 0 nil])
([nil nil ((1817 . 1823) (#("      " 0 6 (hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified nil)) . 1816) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (1816 . 1823) (#("      " 0 6 (hilit-chg hilit-chg fontified nil)) . 1815) (undo-tree-id175 . -6) (1815 . 1821) (1815 . 1816) (t 25774 35021 771288 978000)) nil (25774 35060 797462 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2058 . 2059) (nil fontified nil 2057 . 2059) (nil fontified nil 2050 . 2057) (nil fontified nil 2041 . 2050) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (nil fontified nil 2038 . 2039) (nil fontified nil 2037 . 2038) (nil fontified nil 2036 . 2037) (nil fontified nil 2035 . 2036) (nil fontified nil 2021 . 2035) (nil fontified nil 2020 . 2021) (nil fontified nil 1975 . 2020) (nil fontified nil 1974 . 1975) (nil fontified nil 1973 . 1974) (nil fontified nil 1972 . 1973) (nil fontified nil 1957 . 1972) (nil fontified nil 1955 . 1957) (nil fontified nil 1949 . 1955) (nil fontified nil 1934 . 1949) (nil fontified nil 1933 . 1934) (nil fontified nil 1931 . 1933) (nil fontified nil 1929 . 1931) (nil fontified nil 1928 . 1929) (nil fontified nil 1927 . 1928) (nil fontified nil 1922 . 1927) (nil fontified nil 1921 . 1922) (nil fontified nil 1919 . 1921) (nil fontified nil 1900 . 1919) (nil fontified nil 1898 . 1900) (nil fontified nil 1892 . 1898) (nil fontified nil 1875 . 1892) (nil fontified nil 1869 . 1875) (nil fontified nil 1868 . 1869) (nil fontified nil 1863 . 1868) (nil fontified nil 1862 . 1863) (nil fontified nil 1859 . 1862) (nil fontified nil 1848 . 1859) (nil fontified nil 1837 . 1848) (nil fontified nil 1836 . 1837) (nil fontified nil 1831 . 1836) (nil fontified nil 1830 . 1831) (nil fontified nil 1823 . 1830) (nil fontified nil 1816 . 1823) (1816 . 2059)) nil (25774 35060 797459 853000) 0 nil])
([nil nil ((#("H" 0 1 (face (bold underline) fontified t hilit-chg hilit-chg)) . -1922) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("o" 0 1 (face (bold underline) fontified t hilit-chg hilit-chg)) . -1923) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("t" 0 1 (face (bold underline) fontified t hilit-chg hilit-chg)) . -1924) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("e" 0 1 (face (bold underline) fontified t hilit-chg hilit-chg)) . -1925) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("l" 0 1 (face (bold underline) fontified t hilit-chg hilit-chg)) . -1926) (undo-tree-id170 . -1) 1927) nil (25774 35060 797457 339000) 0 nil])
([nil nil ((1922 . 1927)) nil (25774 35060 797450 925000) 0 nil])
([nil nil ((#("      <section class=\"container\">
        <div class=\"flow\">
              <hgroup>
                  <h1>Venue</h1>
              </hgroup>
              <p>
                All speakers will stay at ...
              </p>
        </section>

" 0 7 (fontified t hilit-chg hilit-chg) 7 14 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 14 15 (fontified t hilit-chg hilit-chg) 15 20 (face font-lock-variable-name-face fontified t hilit-chg hilit-chg) 20 21 (fontified t hilit-chg hilit-chg) 21 32 (face font-lock-string-face fontified t hilit-chg hilit-chg) 32 43 (fontified t hilit-chg hilit-chg) 43 46 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 46 47 (fontified t hilit-chg hilit-chg) 47 52 (face font-lock-variable-name-face fontified t hilit-chg hilit-chg) 52 53 (fontified t hilit-chg hilit-chg) 53 59 (face font-lock-string-face fontified t hilit-chg hilit-chg) 59 76 (fontified t hilit-chg hilit-chg) 76 82 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 82 84 (fontified t hilit-chg hilit-chg) 84 103 (fontified t hilit-chg hilit-chg) 103 105 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 105 106 (fontified t hilit-chg hilit-chg) 106 111 (face (bold underline) fontified t hilit-chg hilit-chg) 111 112 (fontified t hilit-chg hilit-chg hilit-chg-delete nil) 112 113 (fontified t hilit-chg hilit-chg) 113 115 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 115 117 (fontified t hilit-chg hilit-chg) 117 118 (fontified t hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete) 118 133 (fontified t hilit-chg hilit-chg) 133 139 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 139 141 (fontified t hilit-chg hilit-chg) 141 156 (fontified t hilit-chg hilit-chg) 156 157 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 157 158 (fontified t hilit-chg hilit-chg) 158 159 (fontified t hilit-chg hilit-chg) 159 204 (fontified t hilit-chg hilit-chg) 204 205 (fontified t hilit-chg hilit-chg) 205 219 (fontified t hilit-chg hilit-chg) 219 220 (fontified t hilit-chg hilit-chg hilit-chg-delete nil) 220 221 (fontified t hilit-chg hilit-chg) 221 222 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 222 223 (fontified t hilit-chg hilit-chg) 223 224 (fontified t hilit-chg hilit-chg hilit-chg-delete nil) 224 225 (fontified t hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete) 225 234 (fontified t hilit-chg hilit-chg) 234 241 (face font-lock-function-name-face fontified t hilit-chg hilit-chg) 241 242 (fontified t hilit-chg hilit-chg) 242 243 (fontified t rear-nonsticky t hilit-chg hilit-chg) 243 244 (fontified t hilit-chg-delete nil hilit-chg hilit-chg)) . 1816) (undo-tree-id112 . -244) (undo-tree-id113 . -112) (undo-tree-id114 . -243) (undo-tree-id115 . 1) (undo-tree-id116 . -112) (undo-tree-id117 . -243) (undo-tree-id118 . -244) (undo-tree-id119 . -243) (undo-tree-id120 . -244) (undo-tree-id121 . -112) (undo-tree-id122 . -243) (undo-tree-id123 . -112) (undo-tree-id124 . -243) (undo-tree-id125 . -242) (undo-tree-id126 . -243) (undo-tree-id127 . -106) (undo-tree-id128 . -107) (undo-tree-id129 . -106) (undo-tree-id130 . -107) (undo-tree-id131 . -106) (undo-tree-id132 . -107) (undo-tree-id133 . -106) (undo-tree-id134 . -107) (undo-tree-id135 . -106) (undo-tree-id136 . -107) (undo-tree-id137 . -107) (undo-tree-id138 . -107) (undo-tree-id139 . -107) (undo-tree-id140 . -107) (undo-tree-id141 . -107) (undo-tree-id142 . -112) (undo-tree-id143 . -106) (undo-tree-id144 . -107) (undo-tree-id145 . -107) (undo-tree-id146 . -108) (undo-tree-id147 . -108) (undo-tree-id148 . -109) (undo-tree-id149 . -109) (undo-tree-id150 . -110) (undo-tree-id151 . -110) (undo-tree-id152 . -111) (undo-tree-id153 . -244) (undo-tree-id154 . -244) (undo-tree-id155 . -244) 2060) nil (25774 35060 797449 927000) 0 nil])
([nil nil ((1575 . 1583) (#("        " 0 8 (hilit-chg hilit-chg fontified nil)) . 1574) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (1574 . 1583) (1565 . 1567) (1571 . 1572)) nil (25774 35060 797427 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1817 . 1818) (nil fontified nil 1817 . 1818) (nil fontified nil 1816 . 1817) (nil fontified nil 1815 . 1816) (nil fontified nil 1808 . 1815) (nil fontified nil 1799 . 1808) (nil fontified nil 1798 . 1799) (nil fontified nil 1797 . 1798) (nil fontified nil 1796 . 1797) (nil fontified nil 1795 . 1796) (nil fontified nil 1794 . 1795) (nil fontified nil 1793 . 1794) (nil fontified nil 1779 . 1793) (nil fontified nil 1778 . 1779) (nil fontified nil 1733 . 1778) (nil fontified nil 1732 . 1733) (nil fontified nil 1731 . 1732) (nil fontified nil 1730 . 1731) (nil fontified nil 1715 . 1730) (nil fontified nil 1713 . 1715) (nil fontified nil 1707 . 1713) (nil fontified nil 1692 . 1707) (nil fontified nil 1691 . 1692) (nil fontified nil 1689 . 1691) (nil fontified nil 1687 . 1689) (nil fontified nil 1686 . 1687) (nil fontified nil 1685 . 1686) (nil fontified nil 1680 . 1685) (nil fontified nil 1679 . 1680) (nil fontified nil 1677 . 1679) (nil fontified nil 1658 . 1677) (nil fontified nil 1656 . 1658) (nil fontified nil 1650 . 1656) (nil fontified nil 1633 . 1650) (nil fontified nil 1627 . 1633) (nil fontified nil 1626 . 1627) (nil fontified nil 1621 . 1626) (nil fontified nil 1620 . 1621) (nil fontified nil 1617 . 1620) (nil fontified nil 1606 . 1617) (nil fontified nil 1595 . 1606) (nil fontified nil 1594 . 1595) (nil fontified nil 1589 . 1594) (nil fontified nil 1588 . 1589) (nil fontified nil 1581 . 1588) (nil fontified nil 1574 . 1581) (1574 . 1818)) nil (25774 35060 797425 40000) 0 nil])
([nil nil ((#("      <main>" 0 4 (fontified t) 4 6 (hilit-chg hilit-chg fontified t) 6 7 (fontified t) 7 11 (face font-lock-function-name-face fontified t) 11 12 (fontified t)) . 1561) (undo-tree-id105 . -12) (undo-tree-id106 . -4) (undo-tree-id107 . -6) (undo-tree-id108 . -12)) nil (25774 35060 797422 517000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified t)) . 1561) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . 1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1)) nil (25774 35060 797197 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1560) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1)) nil (25774 35060 797189 430000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg-delete nil hilit-chg hilit-chg)) . 1804) (undo-tree-id83 . 1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1)) nil (25774 35060 797184 839000) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg) 8 9 (fontified t)) . 1804) (undo-tree-id73 . -9) (undo-tree-id74 . -9) (undo-tree-id75 . -9) (undo-tree-id76 . -9) (undo-tree-id77 . -9) (undo-tree-id78 . -9) (undo-tree-id79 . 9) (undo-tree-id80 . -8) (undo-tree-id81 . -1) (undo-tree-id82 . -9)) nil (25774 35060 797181 645000) 0 nil])
([nil nil ((1735 . 1741)) nil (25774 35060 797174 6000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t hilit-chg hilit-chg)) . -1739) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1740) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 1741) nil (25774 35060 797173 248000) 0 nil])
([nil nil ((1739 . 1760)) nil (25774 35060 797170 216000) 0 nil])
([nil nil ((1760 . 1766)) nil (25774 35060 797169 809000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t hilit-chg hilit-chg)) . -1764) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("H" 0 1 (fontified t hilit-chg hilit-chg)) . -1765) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 1766) nil (25774 35060 797169 13000) 0 nil])
([nil nil ((1764 . 1771)) nil (25774 35060 797165 546000) 0 nil])
([nil nil ((#("All speakers will stay at ..." 0 1 (hilit-chg-delete nil fontified t hilit-chg hilit-chg) 1 29 (fontified t hilit-chg hilit-chg)) . 1771) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -1) (undo-tree-id62 . -29)) nil (25774 35060 797162 451000) 0 nil])
([nil nil ((#("              <hgroup>" 0 15 (fontified t) 15 21 (face font-lock-function-name-face fontified t) 21 22 (fontified t)) . 1621) (undo-tree-id198 . -22) (t 25774 35060 823552 393000)) nil (25774 35077 122317 357000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 1621) (undo-tree-id196 . -1) (undo-tree-id197 . -1)) nil (25774 35077 122315 418000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1631) 1621) nil (25774 35077 122313 526000) 0 nil])
([nil nil ((#("    </hgroup>" 0 6 (fontified t) 6 12 (face font-lock-function-name-face fontified t) 12 13 (fontified t)) . 1656) (undo-tree-id195 . -13)) nil (25774 35077 122312 965000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 1656) (undo-tree-id193 . -1) (undo-tree-id194 . -1)) nil (25774 35077 122311 842000) 0 nil])
([nil nil ((#("              " 0 1 (hilit-chg-delete hilit-chg-delete fontified t) 1 14 (fontified t)) . -1656) (undo-tree-id192 . -1)) nil (25774 35077 122309 851000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1672) 1670) nil (25774 35077 122308 448000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1719) (undo-tree-id191 . -2) 1721) nil (25774 35077 122307 615000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1730) 1734) nil (25774 35077 122306 305000) 0 nil])
([nil nil ((#("      <hgroup>" 0 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (fontified t)) . 1811) (undo-tree-id190 . -14)) nil (25774 35077 122305 303000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 1811) (undo-tree-id188 . -1) (undo-tree-id189 . -1)) nil (25774 35077 122303 813000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1813) 1811) nil (25774 35077 122301 876000) 0 nil])
([nil nil ((1813 . 1814)) nil (25774 35077 122301 291000) 0 nil])
([nil nil ((#("              " 0 1 (fontified t hilit-chg-delete hilit-chg-delete) 1 14 (fontified t)) . -1829) (undo-tree-id187 . -11) 1840) nil (25774 35077 122300 654000) 0 nil])
([nil nil ((#("</hgroup>" 0 1 (hilit-chg-delete hilit-chg-delete fontified t) 1 2 (fontified t) 2 8 (face font-lock-function-name-face fontified t) 8 9 (fontified t)) . 1829) (undo-tree-id181 . -1) (undo-tree-id182 . 9) (undo-tree-id183 . -1) (undo-tree-id184 . 1) (undo-tree-id185 . -9) (undo-tree-id186 . -9)) nil (25774 35077 122298 313000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 1829) (undo-tree-id179 . -1) (undo-tree-id180 . -1)) nil (25774 35077 122292 170000) 0 nil])
([nil nil ((#("x" 0 1 (hilit-chg hilit-chg fontified t)) . 1813) (undo-tree-id177 . -1) (undo-tree-id178 . -1)) nil (25774 35077 122288 577000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1838)) nil (25774 35077 122284 903000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1854) 1852) nil (25774 35077 122283 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1894) (undo-tree-id176 . -2) 1896) nil (25774 35077 122282 208000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1905) 1909) nil (25774 35077 122261 758000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1916) (undo-tree-id211 . -1) (t 25774 35077 143669 816000)) nil (25774 35142 451365 884000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t hilit-chg-delete hilit-chg-delete) 6 7 (fontified t)) . 1916)) nil (25774 35142 451364 927000) 0 nil])
([nil nil ((#("                  <li><a href=\"../index.html\">Home</a></li>
                  <li><a href=\"../tutorial/index.html\">Tutorial</a></li>
                  <li><a href=\"../colloquium/index.html\">Colloquium</a></li>
                  <li><a href=\"../index.html#organization\">Organizers</a></li>
                  <li><a href=\"../index.html#previous-editions\">Previous Editions</a></li>
" 0 19 (fontified t) 19 21 (face font-lock-function-name-face fontified t) 21 23 (fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (fontified t) 25 29 (face font-lock-variable-name-face fontified t) 29 30 (fontified t) 30 45 (face font-lock-string-face fontified t) 45 52 (fontified t) 52 53 (face font-lock-function-name-face fontified t) 53 56 (fontified t) 56 58 (face font-lock-function-name-face fontified t) 58 79 (fontified t) 79 81 (face font-lock-function-name-face fontified t) 81 83 (fontified t) 83 84 (face font-lock-function-name-face fontified t) 84 85 (fontified t) 85 89 (face font-lock-variable-name-face fontified t) 89 90 (fontified t) 90 114 (face font-lock-string-face fontified t) 114 125 (fontified t) 125 126 (face font-lock-function-name-face fontified t) 126 129 (fontified t) 129 131 (face font-lock-function-name-face fontified t) 131 152 (fontified t) 152 154 (face font-lock-function-name-face fontified t) 154 156 (fontified t) 156 157 (face font-lock-function-name-face fontified t) 157 158 (fontified t) 158 162 (face font-lock-variable-name-face fontified t) 162 163 (fontified t) 163 189 (face font-lock-string-face fontified t) 189 202 (fontified t) 202 203 (face font-lock-function-name-face fontified t) 203 206 (fontified t) 206 208 (face font-lock-function-name-face fontified t) 208 229 (fontified t) 229 231 (face font-lock-function-name-face fontified t) 231 233 (fontified t) 233 234 (face font-lock-function-name-face fontified t) 234 235 (fontified t) 235 239 (face font-lock-variable-name-face fontified t) 239 240 (fontified t) 240 268 (face font-lock-string-face fontified t) 268 281 (fontified t) 281 282 (face font-lock-function-name-face fontified t) 282 285 (fontified t) 285 287 (face font-lock-function-name-face fontified t) 287 308 (fontified t) 308 310 (face font-lock-function-name-face fontified t) 310 312 (fontified t) 312 313 (face font-lock-function-name-face fontified t) 313 314 (fontified t) 314 318 (face font-lock-variable-name-face fontified t) 318 319 (fontified t) 319 352 (face font-lock-string-face fontified t) 352 372 (fontified t) 372 373 (face font-lock-function-name-face fontified t) 373 376 (fontified t) 376 378 (face font-lock-function-name-face fontified t) 378 380 (fontified t)) . 1087) (undo-tree-id199 . -101) (undo-tree-id200 . -101) (undo-tree-id201 . -380) (undo-tree-id202 . -101) (undo-tree-id203 . -101) (undo-tree-id204 . -101) (undo-tree-id205 . -101) (undo-tree-id206 . -101) (undo-tree-id207 . -101) (undo-tree-id208 . -380) (undo-tree-id209 . -380) (undo-tree-id210 . -380) 1467) nil (25774 35142 451364 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1371 . 1372) (nil fontified nil 1371 . 1372) (nil fontified nil 1370 . 1371) (nil fontified nil 1368 . 1370) (nil fontified nil 1365 . 1368) (nil fontified nil 1364 . 1365) (nil fontified nil 1363 . 1364) (nil fontified nil 1362 . 1363) (nil fontified nil 1358 . 1362) (nil fontified nil 1357 . 1358) (nil fontified nil 1356 . 1357) (nil fontified nil 1351 . 1356) (nil fontified nil 1345 . 1351) (nil fontified nil 1344 . 1345) (nil fontified nil 1343 . 1344) (nil fontified nil 1332 . 1343) (nil fontified nil 1327 . 1332) (nil fontified nil 1326 . 1327) (nil fontified nil 1325 . 1326) (nil fontified nil 1321 . 1325) (nil fontified nil 1320 . 1321) (nil fontified nil 1319 . 1320) (nil fontified nil 1317 . 1319) (nil fontified nil 1315 . 1317) (nil fontified nil 1314 . 1315) (nil fontified nil 1294 . 1314) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1290 . 1292) (nil fontified nil 1287 . 1290) (nil fontified nil 1286 . 1287) (nil fontified nil 1273 . 1286) (nil fontified nil 1250 . 1273) (nil fontified nil 1249 . 1250) (nil fontified nil 1245 . 1249) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1241 . 1243) (nil fontified nil 1239 . 1241) (nil fontified nil 1218 . 1239) (nil fontified nil 1216 . 1218) (nil fontified nil 1214 . 1216) (nil fontified nil 1211 . 1214) (nil fontified nil 1210 . 1211) (nil fontified nil 1199 . 1210) (nil fontified nil 1178 . 1199) (nil fontified nil 1177 . 1178) (nil fontified nil 1173 . 1177) (nil fontified nil 1172 . 1173) (nil fontified nil 1171 . 1172) (nil fontified nil 1169 . 1171) (nil fontified nil 1167 . 1169) (nil fontified nil 1144 . 1167) (nil fontified nil 1142 . 1144) (nil fontified nil 1139 . 1142) (nil fontified nil 1138 . 1139) (nil fontified nil 1131 . 1138) (nil fontified nil 1119 . 1131) (nil fontified nil 1118 . 1119) (nil fontified nil 1114 . 1118) (nil fontified nil 1113 . 1114) (nil fontified nil 1112 . 1113) (nil fontified nil 1110 . 1112) (nil fontified nil 1108 . 1110) (nil fontified nil 1087 . 1108) (1087 . 1372)) nil (25774 35142 451345 504000) 0 nil])
([nil nil ((1330 . 1331) (1253 . 1254) (1180 . 1181) (1120 . 1121) (t 25774 35142 476179 958000) (apply 0 1120 1327 cua--rect-undo-handler [1120 1371 33 33 2 0 t nil] t 1120 1327)) nil (25774 35276 437380 670000) 0 nil])
([nil nil ((1334 . 1335) (1256 . 1257) (1182 . 1183) (1121 . 1122) (apply 0 1121 1331 cua--rect-undo-handler [1120 1375 34 34 2 0 t nil] t 1121 1331)) nil (25774 35276 437379 51000) 0 nil])
([nil nil ((1338 . 1339) (1259 . 1260) (1184 . 1185) (1122 . 1123) (apply 0 1122 1335 cua--rect-undo-handler [1120 1379 35 35 2 0 t nil] t 1122 1335)) nil (25774 35276 437375 284000) 0 nil])
([nil nil ((1835 . 1841) (#("      " 0 6 (fontified nil hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete)) . 1834) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (1834 . 1841) (#("      " 0 6 (fontified nil hilit-chg hilit-chg)) . 1833) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (1832 . 1840) (t 25774 35276 457400 898000)) nil (25774 40644 946991 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5101 . 5102) (nil fontified nil 1834 . 5102) (1834 . 5102)) nil (25774 40644 946972 517000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -1847) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1848) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -1849) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1850) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1851) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1852) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1853) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1854) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1855) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -1856) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1857) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1858) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1859) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1860) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1861) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1862) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1863) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1864) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -1865) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("2" 0 1 (fontified t face font-lock-string-face)) . -1866) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1867) (undo-tree-id308 . -1) 1868 (t 25774 40644 971911 697000)) nil (25774 40773 114337 694000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-string-face)) . -1845) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1846) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 1847) nil (25774 40773 114028 202000) 0 nil])
([nil nil ((1845 . 1846)) nil (25774 40773 114011 489000) 0 nil])
([nil nil ((1847 . 1861)) nil (25774 40773 114011 187000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face (bold underline))) . 1861) (undo-tree-id7 . -1) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face (bold underline))) . 1861) (undo-tree-id8 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face (bold underline))) . 1861) (undo-tree-id9 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face (bold underline))) . 1861) (undo-tree-id10 . -1) (#("V" 0 1 (fontified t face (bold underline))) . 1861)) nil (25774 40773 114010 128000) 0 nil])
([nil nil ((1861 . 1866)) nil (25774 40773 114000 201000) 0 nil])
([nil nil ((1866 . 1867)) nil (25774 40773 113999 795000) 0 nil])
([nil nil ((1867 . 1875)) nil (25774 40773 113996 498000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1604) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (#("a" 0 1 (fontified t)) . -1605) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("k" 0 1 (fontified t)) . -1606) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("e" 0 1 (fontified t)) . -1607) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (#(" " 0 1 (fontified t)) . -1608) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#("p" 0 1 (fontified t)) . -1609) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#("l" 0 1 (fontified t)) . -1610) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("a" 0 1 (fontified t)) . -1611) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (#("c" 0 1 (fontified t)) . -1612) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (#("e" 0 1 (fontified t)) . -1613) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (#(" " 0 1 (fontified t)) . -1614) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (#("a" 0 1 (fontified t)) . -1615) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (#("t" 0 1 (fontified t)) . -1616) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#(" " 0 1 (fontified t)) . -1617) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#("H" 0 1 (fontified t)) . -1618) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (#("H" 0 1 (fontified t)) . -1619) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (#("U" 0 1 (fontified t)) . -1620) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (#(" " 0 1 (fontified t)) . -1621) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("." 0 1 (fontified t)) . -1622) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (#("." 0 1 (fontified t)) . -1623) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (#("." 0 1 (fontified t)) . -1624) (undo-tree-id980 . -1) 1625 (t 25774 40773 139139 436000)) nil (25774 40824 628824 393000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1593) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("a" 0 1 (fontified t)) . -1594) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("l" 0 1 (fontified t)) . -1595) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("k" 0 1 (fontified t)) . -1596) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("s" 0 1 (fontified t)) . -1597) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#(" " 0 1 (fontified t)) . -1598) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("w" 0 1 (fontified t)) . -1599) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("i" 0 1 (fontified t)) . -1600) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (#("l" 0 1 (fontified t)) . -1601) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("l" 0 1 (fontified t)) . -1602) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#(" " 0 1 (fontified t)) . -1603) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 1604) nil (25774 40824 628693 304000) 0 nil])
([nil nil ((1593 . 1603)) nil (25774 40824 628508 438000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t hilit-chg hilit-chg)) . -1601) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1602) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 1603) nil (25774 40824 628507 761000) 0 nil])
([nil nil ((1601 . 1609)) nil (25774 40824 628505 718000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t hilit-chg hilit-chg)) . -1608) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 1609) nil (25774 40824 628505 410000) 0 nil])
([nil nil ((1608 . 1629)) nil (25774 40824 628503 895000) 0 nil])
([nil nil ((1629 . 1642)) nil (25774 40824 628503 594000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1638) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("k" 0 1 (fontified t hilit-chg hilit-chg)) . -1639) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1640) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1641) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 1642) nil (25774 40824 628502 997000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t hilit-chg hilit-chg)) . -1635) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1636) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1637) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 1638) nil (25774 40824 628497 766000) 0 nil])
([nil nil ((1635 . 1639)) nil (25774 40824 628489 605000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1637) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1638) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 1639) nil (25774 40824 628489 41000) 0 nil])
([nil nil ((1637 . 1640)) nil (25774 40824 628486 747000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1639) (undo-tree-id373 . -1) (undo-tree-id374 . -1) 1640) nil (25774 40824 628486 357000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1636) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1637) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("k" 0 1 (fontified t hilit-chg hilit-chg)) . -1638) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 1639) nil (25774 40824 628484 362000) 0 nil])
([nil nil ((1636 . 1656)) nil (25774 40824 628478 400000) 0 nil])
([nil nil ((1656 . 1677)) nil (25774 40824 628478 145000) 0 nil])
([nil nil ((1677 . 1693)) nil (25774 40824 628477 875000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1691) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1692) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 1693) nil (25774 40824 628477 392000) 0 nil])
([nil nil ((1691 . 1704)) nil (25774 40824 628475 115000) 0 nil])
([nil nil ((1704 . 1705)) nil (25774 40824 628474 829000) 0 nil])
([nil nil ((1705 . 1711)) nil (25774 40824 628474 508000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t hilit-chg hilit-chg)) . -1709) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1710) (undo-tree-id352 . -1) (undo-tree-id353 . -1) 1711) nil (25774 40824 628473 848000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t hilit-chg hilit-chg)) . -1703) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . 1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("ü" 0 1 (fontified t hilit-chg hilit-chg)) . -1704) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1705) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1706) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1707) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1708) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) 1709) nil (25774 40824 628469 336000) 0 nil])
([nil nil ((1703 . 1707)) nil (25774 40824 628446 43000) 0 nil])
([nil nil ((1707 . 1708)) nil (25774 40824 628445 523000) 0 nil])
([nil nil ((1708 . 1717)) nil (25774 40824 628441 895000) 0 nil])
([nil nil ((1717 . 1719) (t 25774 40824 654561 263000)) nil (25774 41001 505432 868000) 0 nil])
([nil nil ((1593 . 1599)) nil (25774 41001 505432 309000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1598) (undo-tree-id1061 . -1) 1599) nil (25774 41001 505431 887000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1593) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1594) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1595) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("k" 0 1 (fontified t hilit-chg hilit-chg)) . -1596) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1597) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) 1598) nil (25774 41001 505430 708000) 0 nil])
([nil nil ((1734 . 1745)) nil (25774 41001 505423 188000) 0 nil])
([nil nil ((1745 . 1748)) nil (25774 41001 505422 551000) 0 nil])
([nil nil ((1748 . 1761)) nil (25774 41001 505421 906000) 0 nil])
([nil nil ((1761 . 1762)) nil (25774 41001 505421 614000) 0 nil])
([nil nil ((1762 . 1763)) nil (25774 41001 505421 297000) 0 nil])
([nil nil ((1763 . 1765)) nil (25774 41001 505420 970000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t hilit-chg hilit-chg)) . -1759) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) 1765) nil (25774 41001 505420 451000) 0 nil])
([nil nil ((1763 . 1764)) nil (25774 41001 505418 748000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1763) (undo-tree-id1038 . -1) 1764) nil (25774 41001 505418 275000) 0 nil])
([nil nil ((1748 . 1761)) nil (25774 41001 505417 430000) 0 nil])
([nil nil ((1761 . 1776)) nil (25774 41001 505417 191000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1773) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1774) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1775) (undo-tree-id1037 . -1) 1776) nil (25774 41001 505416 569000) 0 nil])
([nil nil ((1773 . 1779)) nil (25774 41001 505413 415000) 0 nil])
([nil nil ((1779 . 1784)) nil (25774 41001 505412 960000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1778) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (#("q" 0 1 (fontified t hilit-chg hilit-chg)) . -1779) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1780) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1781) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1782) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1783) (undo-tree-id1031 . -1) 1784) nil (25774 41001 505411 822000) 0 nil])
([nil nil ((1778 . 1796)) nil (25774 41001 505230 8000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1792) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1793) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg)) . -1794) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (#("d" 0 1 (fontified t hilit-chg hilit-chg)) . -1795) (undo-tree-id1010 . -1) 1796) nil (25774 41001 505229 222000) 0 nil])
([nil nil ((1792 . 1813)) nil (25774 41001 505222 886000) 0 nil])
([nil nil ((1813 . 1826)) nil (25774 41001 505222 642000) 0 nil])
([nil nil ((1826 . 1834)) nil (25774 41001 505222 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1876 . 1877) (nil fontified nil 1834 . 1877) (1834 . 1877)) nil (25774 41001 505221 990000) 0 nil])
([nil nil ((1834 . 1847)) nil (25774 41001 505221 534000) 0 nil])
([nil nil ((1890 . 1901)) nil (25774 41001 505221 270000) 0 nil])
([nil nil ((1901 . 1908)) nil (25774 41001 505221 26000) 0 nil])
([nil nil ((1908 . 1909)) nil (25774 41001 505220 643000) 0 nil])
([nil nil ((1909 . 1923)) nil (25774 41001 505220 208000) 0 nil])
([nil nil ((1923 . 1927)) nil (25774 41001 505219 699000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t hilit-chg hilit-chg)) . -1924) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1925) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -1926) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) 1927) nil (25774 41001 505219 181000) 0 nil])
([nil nil ((1924 . 1931)) nil (25774 41001 505214 785000) 0 nil])
([nil nil ((1931 . 1932)) nil (25774 41001 505214 364000) 0 nil])
([nil nil ((1932 . 1942)) nil (25774 41001 505213 844000) 0 nil])
([nil nil ((1942 . 1943)) nil (25774 41001 505213 303000) 0 nil])
([nil nil ((1943 . 1945)) nil (25774 41001 505212 847000) 0 nil])
([nil nil ((1837 . 1838)) nil (25774 41001 505212 251000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t hilit-chg hilit-chg)) . -1837) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 1838) nil (25774 41001 505211 523000) 0 nil])
([nil nil ((1837 . 1843)) nil (25774 41001 505209 982000) 0 nil])
([nil nil ((1951 . 1952)) nil (25774 41001 505209 428000) 0 nil])
([nil nil ((1802 . 1810)) nil (25774 41001 505208 790000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1807) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1808) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1809) (undo-tree-id988 . -1) (undo-tree-id989 . -1) 1810) nil (25774 41001 505206 242000) 0 nil])
([nil nil ((1807 . 1811)) nil (25774 41001 505187 263000) 0 nil])
([nil nil ((1551 . 1555) (t 25774 41001 536242 90000)) nil (25774 41025 533107 612000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1554) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 1555) nil (25774 41025 533106 737000) 0 nil])
([nil nil ((1554 . 1558)) nil (25774 41025 533105 332000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1556) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1557) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 1558) nil (25774 41025 533104 29000) 0 nil])
([nil nil ((1556 . 1558)) nil (25774 41025 533098 699000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1557) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) 1558) nil (25774 41025 533097 751000) 0 nil])
([nil nil ((1557 . 1561)) nil (25774 41025 533095 986000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1560) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) 1561) nil (25774 41025 533094 315000) 0 nil])
([nil nil ((1560 . 1562)) nil (25774 41025 533080 487000) 0 nil])
([nil nil ((#("
      <section class=\"container\">
        <div class=\"flow\">
          <h1>Hotel</h1>
          <p>
            All speakers will stay at ...
          </p>
      </section>
" 0 8 (fontified t) 8 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t) 16 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t) 22 33 (fontified t face font-lock-string-face) 33 44 (fontified t) 44 47 (fontified t face font-lock-function-name-face) 47 48 (fontified t) 48 53 (fontified t face font-lock-variable-name-face) 53 54 (fontified t) 54 60 (fontified t face font-lock-string-face) 60 73 (fontified t) 73 75 (fontified t face font-lock-function-name-face) 75 76 (fontified t) 76 81 (fontified t face (bold underline)) 81 83 (fontified t) 83 85 (fontified t face font-lock-function-name-face) 85 98 (fontified t) 98 99 (fontified t face font-lock-function-name-face) 99 155 (fontified t) 155 156 (fontified t face font-lock-function-name-face) 156 158 (fontified t) 158 166 (fontified t) 166 173 (fontified t face font-lock-function-name-face) 173 174 (fontified t) 174 175 (fontified t)) . 2005) (undo-tree-id1102 . -175) (undo-tree-id1103 . -175) 2180 (t 25774 41025 556023 336000)) nil (25774 41090 234525 317000) 0 nil])
([nil nil ((#("
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 2005)) nil (25774 41090 234523 651000) 0 nil])
([nil nil ((2006 . 2012) (#("      " 0 6 (fontified nil hilit-chg hilit-chg)) . 2005) (2005 . 2011) (2005 . 2006)) nil (25774 41090 234523 53000) 0 nil])
([nil nil ((2007 . 2013) (#("      " 0 6 (fontified nil hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete)) . 2006) (undo-tree-id1100 . -6) (undo-tree-id1101 . -6) (2012 . 2013)) nil (25774 41090 234522 361000) 0 nil])
([nil nil ((2006 . 2007)) nil (25774 41090 234520 791000) 0 nil])
([nil nil ((2006 . 2012) 2007) nil (25774 41090 234520 495000) 0 nil])
([nil nil ((2013 . 2034)) nil (25774 41090 234520 70000) 0 nil])
([nil nil ((2034 . 2039)) nil (25774 41090 234519 831000) 0 nil])
([nil nil ((2040 . 2048) (#("      " 0 6 (hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete fontified t)) . 2040) 2073) nil (25774 41090 234519 203000) 0 nil])
([nil nil ((2039 . 2048)) nil (25774 41090 234518 764000) 0 nil])
([nil nil ((2048 . 2066)) nil (25774 41090 234518 394000) 0 nil])
([nil nil ((2122 . 2123)) nil (25774 41090 234518 119000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -2122) (undo-tree-id1099 . -1) 2123) nil (25774 41090 234517 613000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2122)) nil (25774 41090 234516 786000) 0 nil])
([nil nil ((2122 . 2130)) nil (25774 41090 234516 439000) 0 nil])
([nil nil ((2130 . 2133)) nil (25774 41090 234516 76000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -2130) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . 1) (undo-tree-id1093 . -1) (#("p" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -2131) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (#(">" 0 1 (fontified t hilit-chg hilit-chg)) . -2132) (undo-tree-id1096 . -1) (undo-tree-id1097 . 1) (undo-tree-id1098 . -1) 2133) nil (25774 41090 234515 254000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2130)) nil (25774 41090 234510 20000) 0 nil])
([nil nil ((2123 . 2131) (#("        " 0 8 (fontified nil hilit-chg hilit-chg)) . 2122) (undo-tree-id1087 . -8) (undo-tree-id1088 . -8) (undo-tree-id1089 . -8) (2130 . 2131)) nil (25774 41090 234509 241000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2230)) nil (25774 41090 234505 124000) 0 nil])
([nil nil ((#("<ul>
  <li" 0 1 (fontified t hilit-chg-delete hilit-chg-delete) 1 3 (fontified t face font-lock-function-name-face) 3 5 (fontified t) 5 8 (fontified t) 8 10 (fontified t face font-lock-function-name-face)) . 2230) (undo-tree-id1085 . -10) (undo-tree-id1086 . -10) 2240) nil (25774 41090 234504 659000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2230)) nil (25774 41090 234502 871000) 0 nil])
([nil nil ((2230 . 2233)) nil (25774 41090 234502 532000) 0 nil])
([nil nil ((2242 . 2252) (2230 . 2238) (2233 . 2234)) nil (25774 41090 234502 12000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2555) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2556) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -2557) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (#(">" 0 1 (fontified t)) . -2558) (undo-tree-id1082 . -1) (undo-tree-id1083 . 1) (undo-tree-id1084 . -1) 2559) nil (25774 41090 234500 828000) 0 nil])
([nil nil ((2555 . 2556)) nil (25774 41090 234480 989000) 0 nil])
([nil nil ((2556 . 2558)) nil (25774 41090 234480 538000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2266) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2266) (#("o" 0 1 (fontified t)) . 2266)) nil (25774 41090 234479 348000) 0 nil])
([nil nil ((2268 . 2271)) nil (25774 41090 234478 530000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2271)) nil (25774 41090 234477 605000) 0 nil])
([nil nil ((2204 . 2210)) nil (25774 41090 234476 987000) 0 nil])
([nil nil ((2226 . 2227)) nil (25774 41090 234476 275000) 0 nil])
([nil nil ((2227 . 2228)) nil (25774 41090 234475 420000) 0 nil])
([nil nil ((2228 . 2237)) nil (25774 41090 234469 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2392) (undo-tree-id1725 . -1) 2393 (t 25774 41090 263488 107000)) nil (25774 41202 642671 18000) 0 nil])
([nil nil ((2419 . 2432)) nil (25774 41202 642670 99000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("r" 0 1 (fontified t)) . 2432)) nil (25774 41202 642669 635000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2432)) nil (25774 41202 642668 895000) 0 nil])
([nil nil ((2432 . 2437)) nil (25774 41202 642668 244000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -2436) (undo-tree-id1724 . -1) 2437) nil (25774 41202 642667 938000) 0 nil])
([nil nil ((2436 . 2438)) nil (25774 41202 642667 73000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("b" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("p" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2438) (#(" " 0 1 (fontified t hilit-chg-delete nil)) . 2438)) nil (25774 41202 642665 932000) 0 nil])
([nil nil ((2447 . 2448)) nil (25774 41202 642664 652000) 0 nil])
([nil nil ((2456 . 2457)) nil (25774 41202 642664 420000) 0 nil])
([nil nil ((2458 . 2462)) nil (25774 41202 642664 88000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2458) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -2459) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -2460) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2461) (undo-tree-id1723 . -1) 2462) nil (25774 41202 642663 408000) 0 nil])
([nil nil ((2458 . 2464)) nil (25774 41202 642657 871000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2463) (undo-tree-id1713 . -1) 2464) nil (25774 41202 642657 587000) 0 nil])
([nil nil ((2463 . 2475)) nil (25774 41202 642656 656000) 0 nil])
([nil nil ((2671 . 2672)) nil (25774 41202 642656 393000) 0 nil])
([nil nil ((2672 . 2673)) nil (25774 41202 642656 6000) 0 nil])
([nil nil ((2673 . 2682)) nil (25774 41202 642655 747000) 0 nil])
([nil nil ((2694 . 2711)) nil (25774 41202 642655 424000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2710) (undo-tree-id1712 . -1) 2711) nil (25774 41202 642655 122000) 0 nil])
([nil nil ((2710 . 2719)) nil (25774 41202 642654 318000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2717) (undo-tree-id1710 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2718) (undo-tree-id1711 . -1) 2719) nil (25774 41202 642653 900000) 0 nil])
([nil nil ((2717 . 2723)) nil (25774 41202 642652 386000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2722) (undo-tree-id1707 . -1) (undo-tree-id1708 . 1) (undo-tree-id1709 . -1) 2723) nil (25774 41202 642652 25000) 0 nil])
([nil nil ((2722 . 2723)) nil (25774 41202 642650 152000) 0 nil])
([nil nil ((3194 . 3203)) nil (25774 41202 642649 909000) 0 nil])
([nil nil ((3203 . 3204)) nil (25774 41202 642649 536000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -3203) (undo-tree-id1706 . -1) 3204) nil (25774 41202 642649 237000) 0 nil])
([nil nil ((3203 . 3209)) nil (25774 41202 642648 166000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -3207) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -3208) (undo-tree-id1705 . -1) 3209) nil (25774 41202 642647 751000) 0 nil])
([nil nil ((3207 . 3219)) nil (25774 41202 642646 47000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -3218) (undo-tree-id1702 . -1) 3219) nil (25774 41202 642645 734000) 0 nil])
([nil nil ((3218 . 3219)) nil (25774 41202 642644 903000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -3218) (undo-tree-id1701 . -1) 3219) nil (25774 41202 642644 496000) 0 nil])
([nil nil ((3218 . 3223)) nil (25774 41202 642643 499000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face (italic underline))) . -3225) (undo-tree-id1700 . -1) 3226) nil (25774 41202 642643 102000) 0 nil])
([nil nil ((3225 . 3226)) nil (25774 41202 642642 132000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . 3225)) nil (25774 41202 642641 546000) 0 nil])
([nil nil ((3225 . 3226)) nil (25774 41202 642641 209000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2720) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2721) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#(")" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2722) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . 1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 2723) nil (25774 41202 642640 426000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2699) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (#("h" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2700) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2701) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2702) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2703) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (#("G" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2704) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2705) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2706) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (#("d" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2707) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2708) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2709) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2710) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (#("C" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2711) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2712) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2713) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (#("y" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2714) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2715) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (#("C" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2716) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2717) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2718) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2719) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) 2720) nil (25774 41202 642618 476000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2694) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (#("(" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2695) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (#("W" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2696) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (#("y" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2697) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg face (italic underline))) . -2698) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) 2699) nil (25774 41202 642451 631000) 0 nil])
([nil nil ((#(" " 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (#("y" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (#("t" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (#("i" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (#("C" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#(" " 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (#("n" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (#("e" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (#("d" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (#("r" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (#("a" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (#("G" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#(" " 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (#("m" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (#("a" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("h" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (#("d" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("n" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (#("y" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("W" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (#("(" 0 1 (hilit-chg hilit-chg fontified t face (italic underline))) . 3165) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . 1) (undo-tree-id1197 . -1)) nil (25774 41202 642344 237000) 0 nil])
([nil nil ((#(")" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("e" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (#("r" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (#("t" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (#("n" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (#("e" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (#("C" 0 1 (hilit-chg hilit-chg fontified t hilit-chg-delete hilit-chg-delete face (italic underline))) . 3165) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1)) nil (25774 41202 642119 300000) 0 nil])
([nil nil ((2700 . 2701)) nil (25774 41202 642101 151000) 0 nil])
([nil nil ((2701 . 2704)) nil (25774 41202 642100 357000) 0 nil])
([nil nil ((3094 . 3095)) nil (25774 41202 642099 887000) 0 nil])
([nil nil ((3095 . 3096)) nil (25774 41202 642099 398000) 0 nil])
([nil nil ((3096 . 3098)) nil (25774 41202 642098 889000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -3091) (undo-tree-id1104 . -3) 3098) nil (25774 41202 642097 547000) 0 nil])
([nil nil ((3095 . 3096)) nil (25774 41202 642068 382000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 2735) (t 25774 41202 678672 504000)) nil (25774 41269 3070 587000) 0 nil])
([nil nil ((2735 . 2736)) nil (25774 41269 3070 164000) 0 nil])
([nil nil ((2742 . 2746)) nil (25774 41269 3069 797000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1754 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1755 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1756 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1757 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1758 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1759 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1760 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1761 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3216) (undo-tree-id1762 . -1) (#("g" 0 1 (fontified t)) . 3216)) nil (25774 41269 3068 663000) 0 nil])
([nil nil ((3216 . 3224)) nil (25774 41269 3060 944000) 0 nil])
([nil nil ((#("and" 0 3 (fontified t)) . 3276) (undo-tree-id1744 . -3) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -3) (undo-tree-id1749 . -3) (undo-tree-id1750 . -3) (undo-tree-id1751 . -3) (undo-tree-id1752 . -3) (undo-tree-id1753 . -3) 3279) nil (25774 41269 3060 287000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3276) (undo-tree-id1743 . -1)) nil (25774 41269 3053 706000) 0 nil])
([nil nil ((#("out" 0 3 (fontified t)) . 3378) (undo-tree-id1733 . -3) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -3) (undo-tree-id1738 . -3) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) 3381) nil (25774 41269 3051 892000) 0 nil])
([nil nil ((3378 . 3381)) nil (25774 41269 3043 312000) 0 nil])
([nil nil ((3499 . 3504)) nil (25774 41269 3042 790000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3504) (undo-tree-id1730 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3504) (undo-tree-id1731 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3504) (undo-tree-id1732 . -1) (#("g" 0 1 (fontified t)) . 3504)) nil (25774 41269 3041 966000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3552) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("f" 0 1 (fontified t)) . -3553) (undo-tree-id1729 . -1) 3554) nil (25774 41269 3038 732000) 0 nil])
([nil nil ((3552 . 3557)) nil (25774 41269 3034 200000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t)) . 3558)) nil (25774 41269 3033 397000) 0 nil])
([nil nil ((3558 . 3559)) nil (25774 41269 3032 880000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (1))) . -3584) (undo-tree-id1726 . -1) 3585) nil (25774 41269 3031 424000) 0 nil])
([nil nil ((3584 . 3585)) nil (25774 41269 3020 101000) 0 nil])
([nil nil ((3572 . 3574)) nil (25774 41269 3019 384000) 0 nil])
([nil nil ((3574 . 3575)) nil (25774 41269 3018 432000) 0 nil])
([nil nil ((3575 . 3589)) nil (25774 41269 3013 993000) 0 nil])
([nil nil ((3719 . 3720) (t 25774 41269 30227 198000)) nil (25774 41354 913092 877000) 0 nil])
([nil nil ((3720 . 3724)) nil (25774 41354 913092 505000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -3721) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (#("p" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -3722) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (#(">" 0 1 (fontified t hilit-chg hilit-chg)) . -3723) (undo-tree-id1946 . -1) (undo-tree-id1947 . 1) (undo-tree-id1948 . -1) 3724) nil (25774 41354 913092 75000) 0 nil])
([nil nil ((3721 . 3723)) nil (25774 41354 913087 688000) 0 nil])
([nil nil ((3971 . 3972)) nil (25774 41354 913087 409000) 0 nil])
([nil nil ((3972 . 3973)) nil (25774 41354 913087 235000) 0 nil])
([nil nil ((3973 . 3975)) nil (25774 41354 913086 969000) 0 nil])
([nil nil ((3697 . 3698)) nil (25774 41354 913086 630000) 0 nil])
([nil nil ((3698 . 3699)) nil (25774 41354 913086 244000) 0 nil])
([nil nil ((3699 . 3708)) nil (25774 41354 913085 936000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face (italic underline))) . -3675) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (#("r" 0 1 (fontified t face (italic underline))) . -3676) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (#("a" 0 1 (fontified t face (italic underline))) . -3677) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (#("v" 0 1 (fontified t face (italic underline))) . -3678) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (#("e" 0 1 (fontified t face (italic underline))) . -3679) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (#("l" 0 1 (fontified t face (italic underline))) . -3680) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (#(":" 0 1 (fontified t face (italic underline))) . -3681) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (#(" " 0 1 (fontified t face (italic underline))) . -3682) (undo-tree-id1938 . -1) 3683) nil (25774 41354 913084 735000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face (italic underline))) . -3161) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (#("r" 0 1 (fontified t face (italic underline))) . -3162) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (#("a" 0 1 (fontified t face (italic underline))) . -3163) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#("v" 0 1 (fontified t face (italic underline))) . -3164) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (#("e" 0 1 (fontified t face (italic underline))) . -3165) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#("l" 0 1 (fontified t face (italic underline))) . -3166) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (#(":" 0 1 (fontified t face (italic underline))) . -3167) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (#(" " 0 1 (fontified t face (italic underline))) . -3168) (undo-tree-id1902 . -1) 3169) nil (25774 41354 913069 945000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face (italic underline))) . -2649) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (#("r" 0 1 (fontified t face (italic underline))) . -2650) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (#("a" 0 1 (fontified t face (italic underline))) . -2651) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (#("v" 0 1 (fontified t face (italic underline))) . -2652) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (#("e" 0 1 (fontified t face (italic underline))) . -2653) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (#("l" 0 1 (fontified t face (italic underline))) . -2654) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (#(":" 0 1 (fontified t face (italic underline))) . -2655) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (#(" " 0 1 (fontified t face (italic underline))) . -2656) (undo-tree-id1866 . -1) 2657) nil (25774 41354 913056 269000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (italic underline))) . -2195) (undo-tree-id1830 . -1) 2196) nil (25774 41354 913042 928000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face (italic underline))) . -2188) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#("r" 0 1 (fontified t face (italic underline))) . -2189) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (#("a" 0 1 (fontified t face (italic underline))) . -2190) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (#("v" 0 1 (fontified t face (italic underline))) . -2191) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (#("e" 0 1 (fontified t face (italic underline))) . -2192) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (#("l" 0 1 (fontified t face (italic underline))) . -2193) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (#(":" 0 1 (fontified t face (italic underline))) . -2194) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) 2195) nil (25774 41354 913041 271000) 0 nil])
([nil nil ((#("  <li>All passengers have to wear FFP2 or medical-grade mask.</li>" 0 3 (fontified t) 3 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t face font-lock-function-name-face) 5 10 (fontified t) 10 63 (fontified t) 63 65 (fontified t face font-lock-function-name-face) 65 66 (fontified t)) . 4102)) nil (25774 41354 912833 854000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4102)) nil (25774 41354 912833 493000) 0 nil])
([nil nil ((#("above" 0 5 (fontified t)) . 4291) (undo-tree-id1793 . -5) (undo-tree-id1794 . -5) 4296) nil (25774 41354 912832 973000) 0 nil])
([nil nil ((4291 . 4296)) nil (25774 41354 912831 340000) 0 nil])
([nil nil ((4309 . 4314)) nil (25774 41354 912831 70000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1784 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1785 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1786 . -1) (#("k" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1787 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1788 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1789 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1790 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1791 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4314) (undo-tree-id1792 . -1) (#("c" 0 1 (fontified t)) . 4314)) nil (25774 41354 912830 133000) 0 nil])
([nil nil ((4314 . 4315)) nil (25774 41354 912825 138000) 0 nil])
([nil nil ((4323 . 4329)) nil (25774 41354 912824 85000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4324) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (#("f" 0 1 (fontified t hilit-chg hilit-chg)) . -4325) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4326) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -4327) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (#("y" 0 1 (fontified t hilit-chg hilit-chg)) . -4328) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) 4329) nil (25774 41354 912822 892000) 0 nil])
([nil nil ((4324 . 4331)) nil (25774 41354 912810 805000) 0 nil])
([nil nil ((4458 . 4464)) nil (25774 41354 912810 17000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4464)) nil (25774 41354 912809 157000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face (bold))) . -4607) (undo-tree-id1763 . -1) 4608) nil (25774 41354 912808 399000) 0 nil])
([nil nil ((4607 . 4608)) nil (25774 41354 912796 86000) 0 nil])
([nil nil ((4623 . 4624) (t 25774 41354 941670 306000)) nil (25774 41419 551739 400000) 0 nil])
([nil nil ((4624 . 4625)) nil (25774 41419 551739 92000) 0 nil])
([nil nil ((4625 . 4628)) nil (25774 41419 551738 775000) 0 nil])
([nil nil ((4395 . 4396)) nil (25774 41419 551738 558000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -4395) (undo-tree-id2139 . -1) 4396) nil (25774 41419 551738 180000) 0 nil])
([nil nil ((4473 . 4474)) nil (25774 41419 551737 430000) 0 nil])
([nil nil ((4474 . 4475)) nil (25774 41419 551737 103000) 0 nil])
([nil nil ((4475 . 4478)) nil (25774 41419 551736 883000) 0 nil])
([nil nil ((4640 . 4645)) nil (25774 41419 551736 566000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("b" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4645) (#("I" 0 1 (fontified t)) . 4645)) nil (25774 41419 551735 287000) 0 nil])
([nil nil ((4651 . 4652)) nil (25774 41419 551734 251000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#("m" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#("f" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4652) (#(" " 0 1 (fontified t)) . 4652)) nil (25774 41419 551733 478000) 0 nil])
([nil nil ((4652 . 4658)) nil (25774 41419 551732 847000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4657) (undo-tree-id2138 . -1) 4658) nil (25774 41419 551731 384000) 0 nil])
([nil nil ((4681 . 4686)) nil (25774 41419 551730 614000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -4685) (undo-tree-id2137 . -1) 4686) nil (25774 41419 551730 323000) 0 nil])
([nil nil ((4685 . 4689)) nil (25774 41419 551729 376000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("(" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("m" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("y" 0 1 (fontified t hilit-chg-delete nil)) . 4689)) nil (25774 41419 551728 830000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4680) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -4681) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -4682) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (#("q" 0 1 (fontified t hilit-chg hilit-chg)) . -4683) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -4684) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -4685) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -4686) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -4687) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4688) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) 4689) nil (25774 41419 551726 916000) 0 nil])
([nil nil ((4680 . 4689)) nil (25774 41419 551700 103000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("d" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(")" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4689) (#("m" 0 1 (fontified t hilit-chg-delete nil)) . 4689)) nil (25774 41419 551699 118000) 0 nil])
([nil nil ((4689 . 4692)) nil (25774 41419 551697 916000) 0 nil])
([nil nil ((4697 . 4699)) nil (25774 41419 551697 447000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2072 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2073 . -1) (#("k" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2074 . -1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2075 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2076 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (undo-tree-id2077 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4699) (#(" " 0 1 (fontified t)) . 4699)) nil (25774 41419 551696 636000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4725) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (#("n" 0 1 (fontified t)) . -4726) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (#("s" 0 1 (fontified t)) . -4727) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (#("i" 0 1 (fontified t)) . -4728) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (#("d" 0 1 (fontified t)) . -4729) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#("e" 0 1 (fontified t)) . -4730) (undo-tree-id2071 . -1) 4731) nil (25774 41419 551690 925000) 0 nil])
([nil nil ((4725 . 4727)) nil (25774 41419 551679 345000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4752) (undo-tree-id2050 . -1) 4753) nil (25774 41419 551678 835000) 0 nil])
([nil nil ((4752 . 4762)) nil (25774 41419 551675 707000) 0 nil])
([nil nil ((#("stamped" 0 1 (fontified t hilit-chg-delete nil) 1 5 (fontified t) 5 7 (fontified t hilit-chg hilit-chg)) . 4692) (undo-tree-id2035 . -7) (undo-tree-id2036 . -5) (undo-tree-id2037 . -6) (undo-tree-id2038 . -6) (undo-tree-id2039 . -7) (undo-tree-id2040 . -7) (undo-tree-id2041 . -3) (undo-tree-id2042 . -3) (undo-tree-id2043 . -3) (undo-tree-id2044 . -7) (undo-tree-id2045 . -7) (undo-tree-id2046 . -7) (undo-tree-id2047 . -7) (undo-tree-id2048 . -7) (undo-tree-id2049 . -7) 4699) nil (25774 41419 551674 864000) 0 nil])
([nil nil ((4692 . 4699)) nil (25774 41419 551666 889000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t hilit-chg hilit-chg)) . -4698) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) 4699) nil (25774 41419 551666 324000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -4696) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -4697) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) 4698) nil (25774 41419 551664 594000) 0 nil])
([nil nil ((4696 . 4701)) nil (25774 41419 551415 425000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4753) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4754) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -4755) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -4756) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4757) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#("b" 0 1 (fontified t hilit-chg hilit-chg)) . -4758) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -4759) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -4760) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (#("v" 0 1 (fontified t hilit-chg hilit-chg)) . -4761) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -4762) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -4763) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) 4764) nil (25774 41419 551412 939000) 0 nil])
([nil nil ((4753 . 4755)) nil (25774 41419 551358 141000) 0 nil])
([nil nil ((4680 . 4681) (t 25774 41419 581259 599000)) nil (25774 41435 265443 752000) 0 nil])
([nil nil ((#("
<h3 id=\"general-tips-for-using-public-transportation-within-düsseldorf\">General Tips for using public transportation within Düsseldorf:</h3>
<ul>
  <li>The <a href=\"https://www.bahn.de/hilfe/view/pk/en/download-db-navigator.shtml\">DB Navigator</a> app is helpful for finding routes and buying tickets online.</li>
  <li>For all of the below routes, you need a ticket of type <strong>Preisstufe A</strong> or <strong>Preisstufe A3</strong>.
  There are single tickets and tickets valid for several (e.g.&nbsp;4) trips.</li>
  If you take a tram or subway for at most three stops (e.g. main station → hotel), you can also take a cheaper <strong>Kurzstrecken-Ticket</strong>.</li>
  <li>Some tickets from ticket vending machines need to be validated using the stamp machines on the trains/trams/subways.
</ul>" 0 2 (fontified t) 2 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t) 5 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t) 8 72 (fontified t face font-lock-string-face) 72 73 (fontified t) 73 136 (fontified t face (italic underline)) 136 138 (fontified t) 138 140 (fontified t face font-lock-function-name-face) 140 143 (fontified t) 143 144 (fontified t face font-lock-function-name-face) 144 145 (fontified t face font-lock-function-name-face) 145 147 (fontified t) 147 148 (fontified t hilit-chg-delete hilit-chg-delete) 148 150 (fontified t) 150 152 (fontified t face font-lock-function-name-face) 152 158 (fontified t) 158 159 (fontified t face font-lock-function-name-face) 159 160 (fontified t) 160 162 (fontified t face font-lock-variable-name-face) 162 164 (fontified t face font-lock-variable-name-face) 164 165 (fontified t) 165 191 (fontified t face font-lock-string-face) 191 210 (fontified t face font-lock-string-face) 210 228 (fontified t face font-lock-string-face) 228 231 (fontified t face font-lock-string-face) 231 246 (fontified t) 246 247 (fontified t face font-lock-function-name-face) 247 250 (fontified t) 250 311 (fontified t) 311 313 (fontified t face font-lock-function-name-face) 313 315 (fontified t) 315 318 (fontified t) 318 320 (fontified t face font-lock-function-name-face) 320 336 (fontified t) 336 341 (fontified t) 341 342 (fontified t hilit-chg-delete nil) 342 354 (fontified t) 354 360 (fontified t) 360 361 (fontified t hilit-chg-delete nil) 361 368 (fontified t) 368 376 (fontified t) 376 377 (fontified t hilit-chg-delete nil) 377 383 (fontified t face font-lock-function-name-face) 383 384 (fontified t) 384 396 (fontified t face (bold)) 396 398 (fontified t) 398 404 (fontified t face font-lock-function-name-face) 404 410 (fontified t) 410 416 (fontified t face font-lock-function-name-face) 416 417 (fontified t) 417 430 (fontified t face (bold)) 430 432 (fontified t) 432 438 (fontified t face font-lock-function-name-face) 438 440 (fontified t) 440 441 (fontified t hilit-chg-delete hilit-chg-delete) 441 503 (fontified t) 503 509 (fontified t face font-lock-variable-name-face) 509 510 (hilit-chg-delete hilit-chg-delete fontified t) 510 518 (fontified t) 518 519 (fontified t) 519 520 (fontified t) 520 522 (fontified t face font-lock-function-name-face) 522 523 (fontified t) 523 524 (fontified t) 524 568 (fontified t) 568 590 (fontified t) 590 595 (fontified t) 595 637 (fontified t) 637 643 (fontified t face font-lock-function-name-face) 643 644 (fontified t) 644 657 (fontified t face (bold)) 657 658 (fontified t face (bold)) 658 659 (hilit-chg-delete nil fontified t face (bold)) 659 662 (fontified t face (bold)) 662 663 (fontified t face (bold)) 663 665 (fontified t) 665 671 (fontified t face font-lock-function-name-face) 671 673 (fontified t) 673 674 (fontified t) 674 675 (fontified t) 675 677 (fontified t face font-lock-function-name-face) 677 678 (fontified t) 678 679 (fontified t) 679 682 (fontified t) 682 684 (fontified t face font-lock-function-name-face) 684 685 (fontified t) 685 690 (fontified t) 690 691 (fontified t hilit-chg-delete hilit-chg-delete) 691 696 (fontified t) 696 702 (fontified t) 702 703 (fontified t hilit-chg-delete hilit-chg-delete) 703 725 (fontified t) 725 726 (fontified t hilit-chg hilit-chg) 726 747 (fontified t) 747 748 (fontified t hilit-chg-delete nil) 748 773 (fontified t) 773 775 (fontified t) 775 776 (fontified t hilit-chg-delete nil) 776 799 (fontified t) 799 801 (fontified t) 801 802 (fontified t hilit-chg-delete nil) 802 804 (fontified t) 804 806 (fontified t face font-lock-function-name-face) 806 807 (fontified t)) . 3955) (undo-tree-id2144 . -807) (undo-tree-id2145 . -725) (undo-tree-id2146 . -738) (undo-tree-id2147 . -738) (undo-tree-id2148 . -738) (undo-tree-id2149 . -738) (undo-tree-id2150 . -738) (undo-tree-id2151 . -336) (undo-tree-id2152 . -738) (undo-tree-id2153 . -738) (undo-tree-id2154 . -738) (undo-tree-id2155 . -697) (undo-tree-id2156 . -697) (undo-tree-id2157 . -697) (undo-tree-id2158 . -697) (undo-tree-id2159 . -697) (undo-tree-id2160 . -697) (undo-tree-id2161 . -697) (undo-tree-id2162 . -697) (undo-tree-id2163 . -801) (undo-tree-id2164 . -801) (undo-tree-id2165 . -801) (undo-tree-id2166 . -801) (undo-tree-id2167 . -801) (undo-tree-id2168 . -725) (undo-tree-id2169 . -726) (undo-tree-id2170 . -726) (undo-tree-id2171 . -738) (undo-tree-id2172 . -807) (undo-tree-id2173 . -807) (undo-tree-id2174 . -807) (undo-tree-id2175 . -807)) nil (25774 41435 265442 627000) 0 nil])
([nil nil ((2124 . 2132) (#("        " 0 8 (fontified nil hilit-chg hilit-chg hilit-chg-delete hilit-chg-delete)) . 2123) (undo-tree-id2140 . -8) (undo-tree-id2141 . -8) (undo-tree-id2142 . -8) (2123 . 2132) (#("        " 0 8 (fontified nil hilit-chg hilit-chg)) . 2122) (undo-tree-id2143 . -8) (2122 . 2130) (2122 . 2123)) nil (25774 41435 265427 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2929 . 2930) (nil fontified nil 2929 . 2930) (nil fontified nil 2927 . 2929) (nil fontified nil 2925 . 2927) (nil fontified nil 2924 . 2925) (nil fontified nil 2922 . 2924) (nil fontified nil 2899 . 2922) (nil fontified nil 2898 . 2899) (nil fontified nil 2896 . 2898) (nil fontified nil 2871 . 2896) (nil fontified nil 2870 . 2871) (nil fontified nil 2849 . 2870) (nil fontified nil 2848 . 2849) (nil fontified nil 2826 . 2848) (nil fontified nil 2825 . 2826) (nil fontified nil 2819 . 2825) (nil fontified nil 2814 . 2819) (nil fontified nil 2813 . 2814) (nil fontified nil 2808 . 2813) (nil fontified nil 2807 . 2808) (nil fontified nil 2805 . 2807) (nil fontified nil 2802 . 2805) (nil fontified nil 2801 . 2802) (nil fontified nil 2800 . 2801) (nil fontified nil 2798 . 2800) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2794 . 2796) (nil fontified nil 2788 . 2794) (nil fontified nil 2786 . 2788) (nil fontified nil 2785 . 2786) (nil fontified nil 2782 . 2785) (nil fontified nil 2781 . 2782) (nil fontified nil 2780 . 2781) (nil fontified nil 2767 . 2780) (nil fontified nil 2766 . 2767) (nil fontified nil 2760 . 2766) (nil fontified nil 2718 . 2760) (nil fontified nil 2713 . 2718) (nil fontified nil 2691 . 2713) (nil fontified nil 2647 . 2691) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2643 . 2645) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2633 . 2641) (nil fontified nil 2632 . 2633) (nil fontified nil 2626 . 2632) (nil fontified nil 2564 . 2626) (nil fontified nil 2563 . 2564) (nil fontified nil 2561 . 2563) (nil fontified nil 2555 . 2561) (nil fontified nil 2553 . 2555) (nil fontified nil 2540 . 2553) (nil fontified nil 2539 . 2540) (nil fontified nil 2533 . 2539) (nil fontified nil 2527 . 2533) (nil fontified nil 2521 . 2527) (nil fontified nil 2519 . 2521) (nil fontified nil 2507 . 2519) (nil fontified nil 2506 . 2507) (nil fontified nil 2500 . 2506) (nil fontified nil 2499 . 2500) (nil fontified nil 2491 . 2499) (nil fontified nil 2484 . 2491) (nil fontified nil 2483 . 2484) (nil fontified nil 2477 . 2483) (nil fontified nil 2465 . 2477) (nil fontified nil 2464 . 2465) (nil fontified nil 2459 . 2464) (nil fontified nil 2443 . 2459) (nil fontified nil 2441 . 2443) (nil fontified nil 2438 . 2441) (nil fontified nil 2436 . 2438) (nil fontified nil 2434 . 2436) (nil fontified nil 2373 . 2434) (nil fontified nil 2370 . 2373) (nil fontified nil 2369 . 2370) (nil fontified nil 2354 . 2369) (nil fontified nil 2351 . 2354) (nil fontified nil 2333 . 2351) (nil fontified nil 2314 . 2333) (nil fontified nil 2288 . 2314) (nil fontified nil 2287 . 2288) (nil fontified nil 2285 . 2287) (nil fontified nil 2283 . 2285) (nil fontified nil 2282 . 2283) (nil fontified nil 2281 . 2282) (nil fontified nil 2275 . 2281) (nil fontified nil 2273 . 2275) (nil fontified nil 2271 . 2273) (nil fontified nil 2270 . 2271) (nil fontified nil 2268 . 2270) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2263 . 2266) (nil fontified nil 2261 . 2263) (nil fontified nil 2259 . 2261) (nil fontified nil 2196 . 2259) (nil fontified nil 2195 . 2196) (nil fontified nil 2131 . 2195) (nil fontified nil 2130 . 2131) (nil fontified nil 2128 . 2130) (nil fontified nil 2127 . 2128) (nil fontified nil 2125 . 2127) (nil fontified nil 2123 . 2125) (2123 . 2930)) nil (25774 41435 265412 609000) 0 nil])
([nil nil ((2124 . 2132) 2129 (t 25774 41435 293160 448000)) nil (25774 41438 715986 903000) 0 nil])
([nil nil ((#("Tips" 0 4 (fontified t face (italic underline))) . 2212) (undo-tree-id2180 . -4) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) 2216 (t 25774 41438 741138 719000)) nil (25774 41480 142675 595000) 0 nil])
([nil nil ((2212 . 2218)) nil (25774 41480 142668 333000) 0 nil])
([nil nil ((#("  <li>The <a href=\"https://www.bahn.de/hilfe/view/pk/en/download-db-navigator.shtml\">DB Navigator</a> app is helpful for finding routes and buying tickets online.</li>
" 0 1 (hilit-chg-delete hilit-chg-delete fontified t) 1 3 (fontified t) 3 5 (fontified t face font-lock-function-name-face) 5 11 (fontified t) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 15 (fontified t face font-lock-variable-name-face) 15 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 44 (fontified t face font-lock-string-face) 44 63 (fontified t face font-lock-string-face) 63 81 (fontified t face font-lock-string-face) 81 84 (fontified t face font-lock-string-face) 84 99 (fontified t) 99 100 (fontified t face font-lock-function-name-face) 100 103 (fontified t) 103 164 (fontified t) 164 166 (fontified t face font-lock-function-name-face) 166 168 (fontified t)) . 2280) (undo-tree-id2176 . -168) (undo-tree-id2177 . -168) (undo-tree-id2178 . -168) (undo-tree-id2179 . -168) 2448) nil (25774 41480 142665 276000) 0 nil])
([nil nil ((2124 . 2128) (t 25774 41480 168878 313000)) nil (25774 41485 716514 737000) 0 nil])
([nil nil ((2278 . 2281)) nil (25774 41485 716511 528000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2282) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -2283) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2284) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (#(">" 0 1 (fontified t)) . -2285) (undo-tree-id2302 . -1) (undo-tree-id2303 . 1) (undo-tree-id2304 . -1) 2286 (t 25774 41485 740843 375000)) nil (25774 41524 653508 951000) 0 nil])
([nil nil ((#("<!--        <h3 id=\"general-tips-for-using-public-transportation-within-düsseldorf\">General advice for using public transportation within Düsseldorf:</h3>-->

  <li>" 0 1 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 12 (fontified t face font-lock-comment-delimiter-face) 12 13 (fontified t face font-lock-comment-face) 13 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 83 (fontified t face font-lock-comment-face) 83 84 (fontified t face font-lock-comment-face) 84 92 (fontified t face (italic underline font-lock-comment-face)) 92 98 (fontified t face (italic underline font-lock-comment-face)) 98 99 (fontified t hilit-chg-delete nil face (italic underline font-lock-comment-face)) 99 149 (fontified t face (italic underline font-lock-comment-face)) 149 151 (fontified t face font-lock-comment-face) 151 153 (fontified t face font-lock-comment-face) 153 154 (fontified t face font-lock-comment-face) 154 156 (fontified t face font-lock-comment-delimiter-face) 156 157 (fontified t syntax-table (2097164) face font-lock-comment-delimiter-face) 157 158 (fontified t) 158 159 (fontified t hilit-chg-delete hilit-chg-delete) 159 160 (hilit-chg-delete hilit-chg-delete fontified t) 160 162 (fontified t) 162 164 (fontified t face font-lock-function-name-face) 164 165 (fontified t)) . 2124) (undo-tree-id2257 . -165) (undo-tree-id2258 . -92) (undo-tree-id2259 . -159) (undo-tree-id2260 . -157) (undo-tree-id2261 . -157) (undo-tree-id2262 . -157) (undo-tree-id2263 . -157) (undo-tree-id2264 . -157) (undo-tree-id2265 . -157) (undo-tree-id2266 . -157) (undo-tree-id2267 . -157) (undo-tree-id2268 . -163) (undo-tree-id2269 . -163) (undo-tree-id2270 . -163) (undo-tree-id2271 . -163) (undo-tree-id2272 . -163) (undo-tree-id2273 . -158) (undo-tree-id2274 . -159) (undo-tree-id2275 . -158) (undo-tree-id2276 . -158) (undo-tree-id2277 . -159) (undo-tree-id2278 . -158) (undo-tree-id2279 . -159) (undo-tree-id2280 . -158) (undo-tree-id2281 . -159) (undo-tree-id2282 . -159) (undo-tree-id2283 . -165) (undo-tree-id2284 . -159) (undo-tree-id2285 . 1) (undo-tree-id2286 . -165) (undo-tree-id2287 . 4) (undo-tree-id2288 . -162) (undo-tree-id2289 . -165) 2289) nil (25774 41524 653503 353000) 0 nil])
([nil nil ((2244 . 2252) (#("  " 0 2 (fontified t)) . 2244)) nil (25774 41524 653490 975000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2327) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (#("/" 0 1 (fontified t)) . -2328) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2329) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -2330) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (#(">" 0 1 (fontified t)) . -2331) (undo-tree-id2254 . -1) (undo-tree-id2255 . 1) (undo-tree-id2256 . -1) 2332) nil (25774 41524 653490 329000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2477) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (#("/" 0 1 (fontified t)) . -2478) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2479) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -2480) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (#(">" 0 1 (fontified t)) . -2481) (undo-tree-id2237 . -1) (undo-tree-id2238 . 1) (undo-tree-id2239 . -1) 2482) nil (25774 41524 653483 967000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2480) (undo-tree-id2218 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2480) (undo-tree-id2219 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2480) (undo-tree-id2220 . -1) (#("<" 0 1 (fontified t)) . 2480) (undo-tree-id2221 . 1) (undo-tree-id2222 . -1)) nil (25774 41524 653476 762000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2597) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (#("/" 0 1 (fontified t)) . -2598) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -2599) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2600) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (#(">" 0 1 (rear-nonsticky t fontified t)) . -2601) (undo-tree-id2215 . -1) (undo-tree-id2216 . 1) (undo-tree-id2217 . -1) 2602) nil (25774 41524 653473 29000) 0 nil])
([nil nil ((2597 . 2598)) nil (25774 41524 653466 454000) 0 nil])
([nil nil ((2598 . 2599)) nil (25774 41524 653466 88000) 0 nil])
([nil nil ((2599 . 2601)) nil (25774 41524 653465 834000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t hilit-chg hilit-chg)) . -2599) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (#(">" 0 1 (fontified t hilit-chg hilit-chg)) . -2600) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . 1) (undo-tree-id2200 . -1) 2601) nil (25774 41524 653465 189000) 0 nil])
([nil nil ((2599 . 2601)) nil (25774 41524 653458 402000) 0 nil])
([nil nil ((2123 . 2126)) nil (25774 41524 653458 97000) 0 nil])
([nil nil ((2123 . 2131) 2126) nil (25774 41524 653457 793000) 0 nil])
([nil nil ((2135 . 2145) 2146) nil (25774 41524 653457 14000) 0 nil])
([nil nil ((2273 . 2275) 2286) nil (25774 41524 653456 112000) 0 nil])
([nil nil ((2351 . 2361) (#("  " 0 2 (fontified t)) . 2351) 2374) nil (25774 41524 653455 253000) 0 nil])
([nil nil ((2509 . 2519) (#("  " 0 2 (fontified t)) . 2509) (undo-tree-id2190 . -2) 2540) nil (25774 41524 653454 359000) 0 nil])
([nil nil ((2636 . 2644) 2640) nil (25774 41524 653441 383000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2229) (undo-tree-id2305 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2229) (undo-tree-id2306 . -1) (#(" " 0 1 (fontified t)) . 2229) (t 25774 41524 680599 654000)) nil (25774 41540 305736 953000) 0 nil])
([nil nil ((2229 . 2231)) nil (25774 41540 305725 872000) 0 nil])
([nil nil ((2274 . 2285) (t 25774 41540 332501 882000)) nil (25774 41589 968835 248000) 0 nil])
([nil nil ((#("g" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . -2284) (undo-tree-id2343 . -1) 2285) nil (25774 41589 968834 805000) 0 nil])
([nil nil ((2284 . 2285)) nil (25774 41589 968833 957000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2285) (#("T" 0 1 (hilit-chg-delete nil fontified t)) . 2285) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1)) nil (25774 41589 968833 215000) 0 nil])
([nil nil ((2274 . 2285)) nil (25774 41589 968831 702000) 0 nil])
([nil nil ((2285 . 2295)) nil (25774 41589 968831 457000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2295) (#("y" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (#("u" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("b" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#(" " 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("n" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("a" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("c" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#(" " 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("u" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("o" 0 1 (hilit-chg-delete hilit-chg-delete fontified t hilit-chg hilit-chg)) . 2295) (#("Y" 0 1 (hilit-chg-delete nil fontified t hilit-chg hilit-chg)) . 2295) (undo-tree-id2340 . -1)) nil (25774 41589 968830 589000) 0 nil])
([nil nil ((2309 . 2311)) nil (25774 41589 968827 914000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2311) (#("d" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2311) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2311) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2311) (#(" " 0 1 (fontified t)) . 2311)) nil (25774 41589 968827 435000) 0 nil])
([nil nil ((2337 . 2344)) nil (25774 41589 968826 825000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -2341) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2342) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -2343) (undo-tree-id2337 . -1) 2344) nil (25774 41589 968826 75000) 0 nil])
([nil nil ((2341 . 2343)) nil (25774 41589 968822 812000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2357) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (#("r" 0 1 (fontified t)) . -2358) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (#("i" 0 1 (fontified t)) . -2359) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (#("p" 0 1 (fontified t)) . -2360) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (#("s" 0 1 (fontified t)) . -2361) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("." 0 1 (fontified t)) . -2362) (undo-tree-id2331 . -1) 2363) nil (25774 41589 968821 534000) 0 nil])
([nil nil ((2357 . 2362)) nil (25774 41589 968808 884000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2361) (undo-tree-id2310 . -1) 2362) nil (25774 41589 968808 300000) 0 nil])
([nil nil ((2361 . 2368)) nil (25774 41589 968807 241000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2366) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -2367) (undo-tree-id2309 . -1) 2368) nil (25774 41589 968806 234000) 0 nil])
([nil nil ((2366 . 2387)) nil (25774 41589 968795 714000) 0 nil])
([nil nil ((2387 . 2389)) nil (25774 41589 968795 300000) 0 nil])
([nil nil ((2389 . 2410)) nil (25774 41589 968794 708000) 0 nil])
([nil nil ((2410 . 2411)) nil (25774 41589 968791 287000) 0 nil])
([nil nil ((2355 . 2361) (t 25774 41589 996192 187000)) nil (25774 41615 306627 883000) 0 nil])
([nil nil ((2852 . 2863) (t 25774 41615 336034 423000)) nil (25774 41663 909924 609000) 0 nil])
([nil nil ((2863 . 2867)) nil (25774 41663 909924 210000) 0 nil])
([nil nil ((2878 . 2882)) nil (25774 41663 909924 7000) 0 nil])
([nil nil ((3187 . 3188)) nil (25774 41663 909923 239000) 0 nil])
([nil nil ((3188 . 3189)) nil (25774 41663 909923 24000) 0 nil])
([nil nil ((3189 . 3192)) nil (25774 41663 909922 610000) 0 nil])
([nil nil ((3195 . 3207) (2878 . 2880) (3192 . 3193)) nil (25774 41663 909921 683000) 0 nil])
([nil nil ((3207 . 3208)) nil (25774 41663 909921 162000) 0 nil])
([nil nil ((3208 . 3209)) nil (25774 41663 909920 317000) 0 nil])
([nil nil ((3209 . 3211)) nil (25774 41663 909919 993000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -3210) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) 3211) nil (25774 41663 909919 131000) 0 nil])
([nil nil ((3210 . 3212)) nil (25774 41663 909915 548000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t hilit-chg hilit-chg)) . -3205) (undo-tree-id2344 . -2) (undo-tree-id2345 . -2) 3212) nil (25774 41663 909912 201000) 0 nil])
([nil nil ((#("Leave" 0 5 (fontified t)) . 3648) (undo-tree-id2348 . -5) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2) (undo-tree-id2351 . -2) (undo-tree-id2352 . -5) (undo-tree-id2353 . -5) (undo-tree-id2354 . -5) (undo-tree-id2355 . -5) (undo-tree-id2356 . -5) (undo-tree-id2357 . -5) 3653 (t 25774 41663 939732 167000)) nil (25774 41691 392671 31000) 0 nil])
([nil nil ((3648 . 3655)) nil (25774 41691 392652 499000) 0 nil])
([nil nil ((#("the" 0 3 (fontified t)) . 3903) (undo-tree-id2359 . -3) (undo-tree-id2360 . -2) (undo-tree-id2361 . -2) (undo-tree-id2362 . -2) (undo-tree-id2363 . -3) (undo-tree-id2364 . -3) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) 3906 (t 25774 41691 419561 434000)) nil (25774 41713 220994 10000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 3903) (undo-tree-id2358 . -1)) nil (25774 41713 220982 600000) 0 nil])
([nil nil ((#("direction" 0 9 (fontified t)) . 4396) (undo-tree-id2428 . -9) (undo-tree-id2429 . -2) (undo-tree-id2430 . -2) (undo-tree-id2431 . -2) (undo-tree-id2432 . -9) (undo-tree-id2433 . -9) (undo-tree-id2434 . -9) (undo-tree-id2435 . -9) (undo-tree-id2436 . -9) (undo-tree-id2437 . -9) 4405 (t 25774 41713 247425 870000)) nil (25774 41759 326886 735000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4393) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (#("n" 0 1 (fontified t)) . -4394) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#(" " 0 1 (fontified t)) . -4395) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) 4396) nil (25774 41759 326880 338000) 0 nil])
([nil nil ((4393 . 4398)) nil (25774 41759 326857 534000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t hilit-chg hilit-chg)) . -4394) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -4395) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -4396) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (#("d" 0 1 (fontified t hilit-chg hilit-chg)) . -4397) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) 4398) nil (25774 41759 326855 937000) 0 nil])
([nil nil ((4394 . 4400)) nil (25774 41759 326832 219000) 0 nil])
([nil nil ((4481 . 4486) (t 25774 41759 351139 692000)) nil (25774 41765 861125 889000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -4485) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) 4486) nil (25774 41765 861124 884000) 0 nil])
([nil nil ((4485 . 4489)) nil (25774 41765 861114 96000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4494) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) 4495 (t 25774 41765 887099 132000)) nil (25774 41790 649522 415000) 0 nil])
([nil nil ((4494 . 4507)) nil (25774 41790 649323 302000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2447 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2448 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2449 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2450 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2451 . -1) (#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2452 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2453 . -1) (#("w" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2454 . -1) (#("b" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2455 . -1) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2456 . -1) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2457 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2458 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2459 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2460 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2461 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2462 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2463 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2464 . -1) (#("x" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2465 . -1) (#("E" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2466 . -1) (#("
" 0 1 (fontified t hilit-chg-delete nil)) . 4507)) nil (25774 41790 649321 802000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2445 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4507) (undo-tree-id2446 . -1)) nil (25774 41790 649309 924000) 0 nil])
([nil nil ((4507 . 4517)) nil (25774 41790 649307 926000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4517) (undo-tree-id2440 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4517) (undo-tree-id2441 . -1) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4517) (undo-tree-id2442 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4517) (undo-tree-id2443 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 4517) (undo-tree-id2444 . -1) (#(" " 0 1 (fontified t hilit-chg-delete nil)) . 4517)) nil (25774 41790 649304 744000) 0 nil])
([nil nil ((#("
<h3>On the campus / practical information:</h3>

<ul>
<li>
 On the map below, you can see the subway station and the university. The talks will be in <strong>lecture hall 5D</strong>, which should appear on the map once you zoom in one step further.
 <li>
 <strong>Lunch</strong> will be offered in the mensa.
" 0 2 (fontified t) 2 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t) 5 43 (fontified t face (italic underline)) 43 45 (fontified t) 45 47 (fontified t face font-lock-function-name-face) 47 51 (fontified t) 51 53 (fontified t face font-lock-function-name-face) 53 56 (fontified t) 56 58 (fontified t face font-lock-function-name-face) 58 96 (fontified t) 96 104 (fontified t) 104 110 (fontified t) 110 152 (fontified t) 152 158 (fontified t face font-lock-function-name-face) 158 159 (fontified t) 159 174 (fontified t face (bold)) 174 176 (fontified t) 176 182 (fontified t face font-lock-function-name-face) 182 231 (fontified t) 231 251 (fontified t) 251 253 (fontified t) 253 255 (fontified t face font-lock-function-name-face) 255 259 (fontified t) 259 265 (fontified t face font-lock-function-name-face) 265 266 (fontified t) 266 271 (fontified t face (bold)) 271 273 (fontified t) 273 279 (fontified t face font-lock-function-name-face) 279 311 (fontified t)) . 4595) (undo-tree-id2548 . -311) (undo-tree-id2549 . -310) (undo-tree-id2550 . -311) (undo-tree-id2551 . -311) (undo-tree-id2552 . -311) 4906 (t 25774 41790 674945 335000)) nil (25774 41850 549740 138000) 0 nil])
([nil nil ((#(" <li>
 The <strong>conference dinner</strong> (Wednesday, 19:00) takes place at
<strong>Wilma Wunder</strong>, Martin-Luther-Platz 27; subway/tram stops </strong>Schadowstraße<strong> and <strong>Steinstraße/Königsallee</strong>

</ul>
" 0 1 (fontified t hilit-chg-delete hilit-chg-delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-function-name-face) 4 6 (fontified t) 6 12 (fontified t) 12 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t) 19 29 (fontified t face (bold)) 29 33 (fontified t face (bold)) 33 35 (fontified t face (bold)) 35 36 (fontified t face (bold)) 36 38 (fontified t) 38 44 (fontified t face font-lock-function-name-face) 44 80 (fontified t) 80 81 (fontified t) 81 87 (fontified t face font-lock-function-name-face) 87 88 (fontified t) 88 100 (fontified t face (bold)) 100 102 (fontified t) 102 108 (fontified t face font-lock-function-name-face) 108 155 (fontified t) 155 161 (fontified t face font-lock-function-name-face) 161 176 (fontified t) 176 182 (fontified t face font-lock-function-name-face) 182 189 (fontified t) 189 195 (fontified t face font-lock-function-name-face) 195 196 (fontified t) 196 219 (fontified t face (bold)) 219 221 (fontified t) 221 227 (fontified t face font-lock-function-name-face) 227 232 (fontified t) 232 234 (fontified t face font-lock-function-name-face) 234 236 (fontified t)) . 4595) (undo-tree-id2543 . -236) (undo-tree-id2544 . -1) (undo-tree-id2545 . -236) (undo-tree-id2546 . -236) (undo-tree-id2547 . -236) 4831) nil (25774 41850 549737 477000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4594) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) 4595) nil (25774 41850 549735 340000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t hilit-chg-delete hilit-chg-delete)) . 4594) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1)) nil (25774 41850 549730 97000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4230) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (#("
" 0 1 (fontified t)) . -4231) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) 4232) nil (25774 41850 549728 978000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-function-name-face)) . 1550)) nil (25774 41850 549726 833000) 0 nil])
([nil nil ((1550 . 1551)) nil (25774 41850 549726 673000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-function-name-face)) . 1571)) nil (25774 41850 549726 399000) 0 nil])
([nil nil ((1571 . 1572)) nil (25774 41850 549726 222000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-function-name-face)) . -2119) (undo-tree-id2521 . -1) 2120) nil (25774 41850 549725 839000) 0 nil])
([nil nil ((2119 . 2120)) nil (25774 41850 549725 264000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-function-name-face)) . 2077)) nil (25774 41850 549724 918000) 0 nil])
([nil nil ((2077 . 2078)) nil (25774 41850 549724 756000) 0 nil])
([nil nil ((1987 . 1998)) nil (25774 41850 549724 486000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2233 . 2234) (nil fontified nil 2232 . 2234) (nil fontified nil 2230 . 2232) (nil fontified nil 2225 . 2230) (nil fontified nil 2219 . 2225) (nil fontified nil 2217 . 2219) (nil fontified nil 2194 . 2217) (nil fontified nil 2193 . 2194) (nil fontified nil 2187 . 2193) (nil fontified nil 2180 . 2187) (nil fontified nil 2174 . 2180) (nil fontified nil 2159 . 2174) (nil fontified nil 2153 . 2159) (nil fontified nil 2106 . 2153) (nil fontified nil 2100 . 2106) (nil fontified nil 2098 . 2100) (nil fontified nil 2086 . 2098) (nil fontified nil 2085 . 2086) (nil fontified nil 2079 . 2085) (nil fontified nil 2078 . 2079) (nil fontified nil 2042 . 2078) (nil fontified nil 2036 . 2042) (nil fontified nil 2034 . 2036) (nil fontified nil 2033 . 2034) (nil fontified nil 2031 . 2033) (nil fontified nil 2027 . 2031) (nil fontified nil 2017 . 2027) (nil fontified nil 2016 . 2017) (nil fontified nil 2010 . 2016) (nil fontified nil 2004 . 2010) (nil fontified nil 2002 . 2004) (nil fontified nil 2000 . 2002) (nil fontified nil 1999 . 2000) (nil fontified nil 1998 . 1999) (1998 . 2234)) nil (25774 41850 549723 688000) 0 nil])
([nil nil ((2004 . 2017) (#(" " 0 1 (hilit-chg hilit-chg fontified t)) . 2004) 2012) nil (25774 41850 549722 223000) 0 nil])
([nil nil ((1858 . 1866)) nil (25774 41850 549721 847000) 0 nil])
([nil nil ((1871 . 1872)) nil (25774 41850 549721 682000) 0 nil])
([nil nil ((1872 . 1873)) nil (25774 41850 549721 461000) 0 nil])
([nil nil ((1873 . 1874)) nil (25774 41850 549721 163000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1873) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) 1874) nil (25774 41850 549720 521000) 0 nil])
([nil nil ((1873 . 1879)) nil (25774 41850 549719 313000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -1871) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (#("/" 0 1 (fontified t hilit-chg hilit-chg)) . -1872) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1873) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1874) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1875) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1876) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1877) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (#("g" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1878) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) 1879) nil (25774 41850 549717 606000) 0 nil])
([nil nil ((1979 . 1980)) nil (25774 41850 549466 777000) 0 nil])
([nil nil ((1980 . 1981)) nil (25774 41850 549466 265000) 0 nil])
([nil nil ((1981 . 1988)) nil (25774 41850 549461 708000) 0 nil])
([nil nil ((#("Wednesday" 0 9 (fontified t)) . 2074) (undo-tree-id2581 . -9) (undo-tree-id2582 . -5) (undo-tree-id2583 . -5) (undo-tree-id2584 . -5) (undo-tree-id2585 . -9) (undo-tree-id2586 . -9) (undo-tree-id2587 . -9) (undo-tree-id2588 . -9) (undo-tree-id2589 . -9) (undo-tree-id2590 . -9) 2083 (t 25774 41850 578573 769000)) nil (25774 41870 80318 527000) 0 nil])
([nil nil ((2074 . 2082)) nil (25774 41870 80314 460000) 0 nil])
([nil nil ((#("," 0 1 (fontified t hilit-chg-delete nil)) . -2082) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (#(" " 0 1 (fontified t)) . -2083) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (#("1" 0 1 (fontified t)) . -2084) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (#("9" 0 1 (fontified t)) . -2085) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (#(":" 0 1 (fontified t)) . -2086) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (#("0" 0 1 (fontified t)) . -2087) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (#("0" 0 1 (fontified t)) . -2088) (undo-tree-id2580 . -1) 2089) nil (25774 41870 80312 862000) 0 nil])
([nil nil ((2084 . 2089)) nil (25774 41870 80286 55000) 0 nil])
([nil nil ((#("strong" 0 6 (fontified t face font-lock-function-name-face)) . 2105) (undo-tree-id2604 . -6) (undo-tree-id2605 . -5) (undo-tree-id2606 . -5) (undo-tree-id2607 . -5) (undo-tree-id2608 . -6) (undo-tree-id2609 . -6) (undo-tree-id2610 . -6) (undo-tree-id2611 . -6) (undo-tree-id2612 . -6) (undo-tree-id2613 . -6) 2111 (t 25774 41870 106452 663000)) nil (25774 41900 263479 77000) 0 nil])
([nil nil ((2105 . 2113)) nil (25774 41900 263475 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2148 . 2149) (nil fontified nil 2113 . 2149) (2113 . 2149)) nil (25774 41900 263474 972000) 0 nil])
([nil nil ((2149 . 2152)) nil (25774 41900 263474 563000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t hilit-chg hilit-chg)) . -2151) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . 1) (undo-tree-id2603 . -1) 2152) nil (25774 41900 263474 208000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . -2151) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) 2152) nil (25774 41900 263471 685000) 0 nil])
([nil nil ((2165 . 2166)) nil (25774 41900 263469 560000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2166) (undo-tree-id2591 . -1) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . 2166) (undo-tree-id2592 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . 2166) (undo-tree-id2593 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . 2166) (undo-tree-id2594 . -1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . 2166) (undo-tree-id2595 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . 2166) (undo-tree-id2596 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . 2166)) nil (25774 41900 263468 248000) 0 nil])
([nil nil ((2166 . 2167)) nil (25774 41900 263448 223000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2212) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) 2213 (t 25774 41900 294265 480000)) nil (25774 41918 672847 581000) 0 nil])
([nil nil ((2233 . 2234)) nil (25774 41918 672826 216000) 0 nil])
([nil nil ((2169 . 2178) (t 25774 41918 698151 378000)) nil (25774 41954 983357 687000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2214 . 2215) (nil fontified nil 2178 . 2215) (2178 . 2215)) nil (25774 41954 983356 771000) 0 nil])
([nil nil ((2215 . 2217)) nil (25774 41954 983355 728000) 0 nil])
([nil nil ((2239 . 2240)) nil (25774 41954 983355 45000) 0 nil])
([nil nil ((2240 . 2241)) nil (25774 41954 983354 420000) 0 nil])
([nil nil ((2241 . 2245)) nil (25774 41954 983350 85000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2243) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (#(" " 0 1 (fontified t)) . -2244) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) 2245 (t 25774 41955 9926 264000)) nil (25774 41959 367676 766000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2243) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1)) nil (25774 41959 367623 170000) 0 nil])
([nil nil ((2244 . 2245)) nil (25774 41959 367612 799000) 0 nil])
([nil nil ((2338 . 2340)) nil (25774 41959 367609 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2341) (undo-tree-id2649 . -1) (t 25774 41959 393899 86000)) nil (25774 41961 840874 672000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2020) (undo-tree-id2683 . -1)) nil (25774 41969 620522 279000) 0 nil] [nil nil ((#("</ul>" 0 1 (fontified t hilit-chg-delete hilit-chg-delete) 1 2 (fontified t) 2 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t)) . 2341) (undo-tree-id2643 . -1) (undo-tree-id2644 . 5) (undo-tree-id2645 . -1) (undo-tree-id2646 . 1) (undo-tree-id2647 . -5) (undo-tree-id2648 . -5)) ((2341 . 2346)) (25774 41961 840808 443000) 0 nil])
([nil nil ((#(" " 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . -2015) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (#("<" 0 1 (fontified t)) . -2016) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2017) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -2018) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (#(">" 0 1 (fontified t)) . -2019) (undo-tree-id2679 . -1) (undo-tree-id2680 . 1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) 2020) nil (25774 41969 620521 103000) 0 nil])
nil
([nil nil ((2015 . 2018)) nil (25774 41969 620511 630000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -2031) (2018 . 2019)) nil (25774 41969 620511 198000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-function-name-face)) . -2340) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2341) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (#(">" 0 1 (fontified t)) . -2342) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . 1) (undo-tree-id2660 . -1) 2343) nil (25774 41969 620510 203000) 0 nil])
([nil nil ((2340 . 2342)) nil (25774 41969 620435 89000) 0 nil])
([nil nil ((2338 . 2348) 2342) nil (25774 41969 620430 959000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2219) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (#("-" 0 1 (fontified t)) . -2220) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (#("L" 0 1 (fontified t)) . -2221) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (#("u" 0 1 (fontified t)) . -2222) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (#("t" 0 1 (fontified t)) . -2223) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (#("h" 0 1 (fontified t)) . -2224) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (#("e" 0 1 (fontified t)) . -2225) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (#("r" 0 1 (fontified t)) . -2226) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (#("-" 0 1 (fontified t)) . -2227) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (#("P" 0 1 (fontified t)) . -2228) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (#("l" 0 1 (fontified t)) . -2229) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (#("a" 0 1 (fontified t)) . -2230) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (#("t" 0 1 (fontified t)) . -2231) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (#("z" 0 1 (fontified t)) . -2232) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (#(" " 0 1 (fontified t)) . -2233) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (#("2" 0 1 (fontified t)) . -2234) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (#("7" 0 1 (fontified t)) . -2235) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (#("<" 0 1 (fontified t)) . -2236) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (#("/" 0 1 (fontified t)) . -2237) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -2238) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#(">" 0 1 (fontified t)) . -2239) (undo-tree-id3089 . -1) (undo-tree-id3090 . 1) (undo-tree-id3091 . -1) 2240 (t 25774 41969 645835 535000)) nil (25774 42306 215834 973000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -2214) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (#("a" 0 1 (fontified t)) . -2215) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (#("r" 0 1 (fontified t)) . -2216) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (#("t" 0 1 (fontified t)) . -2217) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (#("i" 0 1 (fontified t)) . -2218) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) 2219) nil (25774 42306 215746 817000) 0 nil])
([nil nil ((2214 . 2224)) nil (25774 42306 215698 28000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg hilit-chg syntax-table (1))) . -2223) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) 2224) nil (25774 42306 215697 696000) 0 nil])
([nil nil ((2223 . 2225)) nil (25774 42306 215696 337000) 0 nil])
([nil nil ((2225 . 2226)) nil (25774 42306 215696 132000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t hilit-chg hilit-chg)) . -2224) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (#("/" 0 1 (fontified t hilit-chg hilit-chg)) . -2225) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) 2226) nil (25774 42306 215695 778000) 0 nil])
([nil nil ((2224 . 2225)) nil (25774 42306 215693 139000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -2224) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) 2225) nil (25774 42306 215692 830000) 0 nil])
([nil nil ((2224 . 2225)) nil (25774 42306 215687 893000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -2224) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) 2225) nil (25774 42306 215687 566000) 0 nil])
([nil nil ((2224 . 2225)) nil (25774 42306 215664 134000) 0 nil])
([nil nil ((2225 . 2231)) nil (25774 42306 215663 913000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t hilit-chg hilit-chg)) . -2230) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) 2231) nil (25774 42306 215663 522000) 0 nil])
([nil nil ((2230 . 2235)) nil (25774 42306 215662 389000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t hilit-chg hilit-chg)) . -2234) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) 2235) nil (25774 42306 215661 869000) 0 nil])
([nil nil ((2234 . 2237)) nil (25774 42306 215660 131000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -2236) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) 2237) nil (25774 42306 215659 688000) 0 nil])
([nil nil ((2236 . 2238)) nil (25774 42306 215658 437000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2291 . 2292) (nil fontified nil 2238 . 2292) (2238 . 2292)) nil (25774 42306 215658 35000) 0 nil])
([nil nil ((2292 . 2296)) nil (25774 42306 215657 495000) 0 nil])
([nil nil ((2296 . 2300)) nil (25774 42306 215657 153000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -2298) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (#("S" 0 1 (fontified t hilit-chg hilit-chg)) . -2299) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) 2300) nil (25774 42306 215656 624000) 0 nil])
([nil nil ((2298 . 2304)) nil (25774 42306 215653 58000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t hilit-chg hilit-chg)) . -2303) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) 2304) nil (25774 42306 215651 852000) 0 nil])
([nil nil ((2303 . 2308)) nil (25774 42306 215640 888000) 0 nil])
([nil nil ((2308 . 2309)) nil (25774 42306 215640 348000) 0 nil])
([nil nil ((2309 . 2312)) nil (25774 42306 215636 882000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2031) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2031) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2031) (#("T" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 2031) (t 25774 42306 243749 416000)) nil (25774 42481 427548 321000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2029) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (#(" " 0 1 (fontified t)) . -2030) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) 2031) nil (25774 42481 427547 662000) 0 nil])
([nil nil ((2029 . 2033)) nil (25774 42481 427545 597000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2033) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2033) (#("<" 0 1 (fontified t hilit-chg-delete nil)) . 2033)) nil (25774 42481 427544 985000) 0 nil])
([nil nil ((2033 . 2034)) nil (25774 42481 427544 424000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2050) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("/" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (#("<" 0 1 (fontified t)) . 2050) (undo-tree-id3229 . 1) (undo-tree-id3230 . -1)) nil (25774 42481 427543 415000) 0 nil])
([nil nil ((2060 . 2067)) nil (25774 42481 427542 247000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2066) (undo-tree-id3228 . -1) 2067) nil (25774 42481 427541 917000) 0 nil])
([nil nil ((2066 . 2067)) nil (25774 42481 427541 303000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -2065) (undo-tree-id3226 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -2066) (undo-tree-id3227 . -1) 2067) nil (25774 42481 427540 743000) 0 nil])
([nil nil ((2065 . 2086)) nil (25774 42481 427539 808000) 0 nil])
([nil nil ((2086 . 2090)) nil (25774 42481 427539 538000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -2084) (undo-tree-id3220 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -2085) (undo-tree-id3221 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -2086) (undo-tree-id3222 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -2087) (undo-tree-id3223 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg)) . -2088) (undo-tree-id3224 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -2089) (undo-tree-id3225 . -1) 2090) nil (25774 42481 427538 976000) 0 nil])
([nil nil ((2084 . 2091)) nil (25774 42481 427535 937000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t hilit-chg hilit-chg)) . -2090) (undo-tree-id3217 . -1) (undo-tree-id3218 . 1) (undo-tree-id3219 . -1) 2091) nil (25774 42481 427535 588000) 0 nil])
([nil nil ((#(" (Thursday, registered participants only)" 0 1 (fontified t hilit-chg-delete hilit-chg-delete) 1 2 (fontified t) 2 10 (fontified t) 10 40 (fontified t hilit-chg hilit-chg) 40 41 (fontified t hilit-chg-delete hilit-chg-delete)) . 2050) (undo-tree-id3213 . -41) (undo-tree-id3214 . -2) (undo-tree-id3215 . -41) (undo-tree-id3216 . -41)) nil (25774 42481 427534 243000) 0 nil])
([nil nil ((2050 . 2051)) nil (25774 42481 427532 473000) 0 nil])
([nil nil ((2051 . 2052)) nil (25774 42481 427532 172000) 0 nil])
([nil nil ((2052 . 2055)) nil (25774 42481 427531 920000) 0 nil])
([nil nil ((2058 . 2070) (#(" " 0 1 (fontified nil hilit-chg-delete nil)) . 2058) (2029 . 2031) (2055 . 2056)) nil (25774 42481 427531 390000) 0 nil])
([nil nil ((2070 . 2076)) nil (25774 42481 427530 942000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2081) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (#("a" 0 1 (fontified t)) . -2082) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (#("k" 0 1 (fontified t)) . -2083) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (#("e" 0 1 (fontified t)) . -2084) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (#("s" 0 1 (fontified t)) . -2085) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (#(" " 0 1 (fontified t)) . -2086) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (#("p" 0 1 (fontified t)) . -2087) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (#("l" 0 1 (fontified t)) . -2088) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (#("a" 0 1 (fontified t)) . -2089) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (#("c" 0 1 (fontified t)) . -2090) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (#("e" 0 1 (fontified t)) . -2091) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (#(" " 0 1 (fontified t)) . -2092) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (#("a" 0 1 (fontified t)) . -2093) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (#("t" 0 1 (fontified t)) . -2094) (undo-tree-id3212 . -1) 2095) nil (25774 42481 427528 900000) 0 nil])
([nil nil ((2081 . 2102)) nil (25774 42481 427386 754000) 0 nil])
([nil nil ((2102 . 2107)) nil (25774 42481 427386 389000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2147 . 2148) (nil fontified nil 2147 . 2148) (nil fontified nil 2117 . 2147) (nil fontified nil 2109 . 2117) (nil fontified nil 2108 . 2109) (nil fontified nil 2107 . 2108) (2107 . 2148)) nil (25774 42481 427385 920000) 0 nil])
([nil nil ((#("(" 0 1 (hilit-chg hilit-chg fontified t)) . 2108) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . 1) (undo-tree-id3107 . -1)) nil (25774 42481 427384 873000) 0 nil])
([nil nil ((#(" " 0 1 (hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified t)) . -2107) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) 2108) nil (25774 42481 427380 237000) 0 nil])
([nil nil ((#("," 0 1 (hilit-chg hilit-chg fontified t)) . 2115)) nil (25774 42481 427356 897000) 0 nil])
([nil nil ((2116 . 2117)) nil (25774 42481 427356 211000) 0 nil])
([nil nil ((2146 . 2149)) nil (25774 42481 427352 445000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2146) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (#(" " 0 1 (fontified t)) . -2147) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (#(" " 0 1 (fontified t)) . -2148) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) 2149 (t 25774 42481 454758 198000)) nil (25774 42513 298061 257000) 0 nil])
([nil nil ((2146 . 2147)) nil (25774 42513 298049 557000) 0 nil])
([nil nil ((2147 . 2149)) nil (25774 42513 298049 310000) 0 nil])
([nil nil ((#("," 0 1 (hilit-chg-delete nil fontified t)) . -2213) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) 2214) nil (25774 42513 298048 862000) 0 nil])
([nil nil ((2214 . 2215)) nil (25774 42513 298045 146000) 0 nil])
([nil nil ((#("(" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 2362) (undo-tree-id3252 . 1) (undo-tree-id3253 . -1)) nil (25774 42513 298044 742000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . -2362) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) 2363) nil (25774 42513 298043 862000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2362) (undo-tree-id3245 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2362) (undo-tree-id3246 . -1) (#("w" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2362) (undo-tree-id3247 . -1) (#("b" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2362) (undo-tree-id3248 . -1) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2362) (undo-tree-id3249 . -1)) nil (25774 42513 298042 204000) 0 nil])
([nil nil ((2362 . 2368)) nil (25774 42513 297867 39000) 0 nil])
([nil nil ((2379 . 2380)) nil (25774 42513 297866 598000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2456) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . 1) (undo-tree-id3243 . -1) (#("." 0 1 (fontified t)) . -2457) (undo-tree-id3244 . -1) 2458) nil (25774 42513 297865 678000) 0 nil])
([nil nil ((2456 . 2457)) nil (25774 42513 624722 222000) 0 nil])
([nil nil ((#("∓" 0 1 (fontified t hilit-chg hilit-chg)) . 2456) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1)) nil (25774 42520 513735 988000) 0 nil] [nil nil ((#("∓" 0 1 (fontified t hilit-chg hilit-chg)) . -2456) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) 2457) ((2456 . 2457)) (25774 42513 298152 126000) 0 nil])
([nil nil ((2412 . 2413) (#("a" 0 1 (fontified t)) . -2412) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (2413 . 2414) (#("n" 0 1 (fontified t)) . -2413) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (2414 . 2415) (#("d" 0 1 (fontified t)) . -2414) (undo-tree-id3305 . -1) 2415) nil (25774 42520 513676 701000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -5099) (5098 . 5099)) ((#("
" 0 1 (hilit-chg hilit-chg fontified t)) . 5098) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (5099 . 5103)) (25774 42513 297845 368000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . 2412) (2413 . 2414) 2412) nil (25774 42520 513668 615000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg hilit-chg-delete nil)) . 2413) (2414 . 2415) 2413) nil (25774 42520 513667 734000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg hilit-chg-delete nil)) . 2414) (undo-tree-id3296 . -1)) nil (25774 42520 513663 530000) 0 nil])
([nil nil ((#("https://goo.gl/maps/2f8fprbMGDphDhs4A" 0 36 (fontified t face font-lock-string-face) 36 37 (rear-nonsticky t fontified t face font-lock-string-face)) . 2224) (undo-tree-id3315 . -37) (undo-tree-id3316 . -37) (undo-tree-id3317 . -37) 2261 (t 25774 42520 538538 198000)) nil (25774 42602 263955 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2260 . 2261) (nil fontified nil 2224 . 2261) (2224 . 2261)) nil (25774 42602 263937 368000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . 2272) (t 25774 42602 290073 595000) (2273 . 2274) 2272 (t 25774 42602 290073 595000)) nil (25774 42614 102623 159000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 2273) (t 25774 42614 130005 850000) (2274 . 2275) 2273 (t 25774 42614 130005 850000)) nil (25774 42618 935555 491000) 0 nil])
([nil nil ((2274 . 2275)) nil (25774 42618 935551 328000) 0 nil])
([nil nil ((2362 . 2363) (t 25774 42618 961978 179000)) nil (25774 42623 875608 85000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -1979) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (#("/" 0 1 (fontified t)) . -1980) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -1981) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -1982) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -1983) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -1984) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -1985) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (#("g" 0 1 (fontified t face font-lock-function-name-face)) . -1986) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (#(">" 0 1 (fontified t)) . -1987) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . 1) (undo-tree-id3443 . -1) (#("." 0 1 (fontified t)) . -1988) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) 1989 (t 25774 42623 901949 867000)) nil (25774 42749 289046 33000) 0 nil])
([nil nil ((1979 . 1990)) nil (25774 42749 288778 644000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2070 . 2071) (nil fontified nil 1990 . 2071) (1990 . 2071)) nil (25774 42749 288778 320000) 0 nil])
([nil nil ((2071 . 2087)) nil (25774 42749 288777 937000) 0 nil])
([nil nil ((2087 . 2088)) nil (25774 42749 288777 692000) 0 nil])
([nil nil ((2088 . 2092)) nil (25774 42749 288777 499000) 0 nil])
([nil nil ((#("." 0 1 (fontified t hilit-chg hilit-chg)) . -2091) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) 2092) nil (25774 42749 288776 988000) 0 nil])
([nil nil ((1981 . 1993)) nil (25774 42749 288775 836000) 0 nil])
([nil nil ((1993 . 1994)) nil (25774 42749 288775 508000) 0 nil])
([nil nil ((1994 . 1997)) nil (25774 42749 288774 698000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t hilit-chg hilit-chg syntax-table (1))) . -1996) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) 1997) nil (25774 42749 288774 326000) 0 nil])
([nil nil ((1996 . 1998)) nil (25774 42749 288773 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2026 . 2027) (nil fontified nil 1990 . 2027) (1990 . 2027)) nil (25774 42749 288772 399000) 0 nil])
([nil nil ((2029 . 2040)) nil (25774 42749 288771 877000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -2035) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) 2036) nil (25774 42749 288768 48000) 0 nil])
([nil nil ((1759 . 1772) (t 25774 42749 321225 454000)) nil (25774 42788 49603 249000) 0 nil])
([nil nil ((1772 . 1778)) nil (25774 42788 49602 988000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t hilit-chg hilit-chg)) . -1776) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1777) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) 1778) nil (25774 42788 49602 616000) 0 nil])
([nil nil ((1776 . 1782)) nil (25774 42788 49600 806000) 0 nil])
([nil nil ((1782 . 1783)) nil (25774 42788 49600 548000) 0 nil])
([nil nil ((1783 . 1786)) nil (25774 42788 49600 378000) 0 nil])
([nil nil ((1786 . 1799)) nil (25774 42788 49600 136000) 0 nil])
([nil nil ((1799 . 1802)) nil (25774 42788 49599 920000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -1756) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -1757) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (#(">" 0 1 (fontified t)) . -1758) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . 1) (undo-tree-id3484 . -1) 1759) nil (25774 42788 49599 106000) 0 nil])
([nil nil ((2263 . 2276)) nil (25774 42788 49587 141000) 0 nil])
([nil nil ((2276 . 2279)) nil (25774 42788 49586 785000) 0 nil])
([nil nil ((#("          <p>" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t)) . 2211) (undo-tree-id3454 . -10) (undo-tree-id3455 . -13)) nil (25774 42788 49586 322000) 0 nil])
([nil nil ((2211 . 2223)) nil (25774 42788 49584 697000) 0 nil])
([nil nil ((#("  " 0 2 (hilit-chg hilit-chg fontified t)) . -2273) (undo-tree-id3451 . -2) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) 2275) nil (25774 42788 49582 891000) 0 nil])
([nil nil ((2369 . 2381) 2381) nil (25774 42788 49575 120000) 0 nil])
([nil nil ((1568 . 1569)) nil (25774 42788 49570 961000) 0 nil])
([nil nil ((1574 . 1585) (t 25774 42788 80999 618000)) nil (25774 42822 827139 357000) 0 nil])
([nil nil ((1585 . 1586)) nil (25774 42822 827138 867000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t hilit-chg-delete nil hilit-chg hilit-chg)) . -1585) (undo-tree-id3542 . -1) 1586) nil (25774 42822 827138 422000) 0 nil])
([nil nil ((1585 . 1595)) nil (25774 42822 827137 261000) 0 nil])
([nil nil ((1595 . 1596)) nil (25774 42822 827136 857000) 0 nil])
([nil nil ((1596 . 1599)) nil (25774 42822 827136 488000) 0 nil])
([nil nil ((#("e" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . -1630) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (#("v" 0 1 (fontified t)) . -1631) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (#("e" 0 1 (fontified t)) . -1632) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (#("n" 0 1 (fontified t)) . -1633) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (#("t" 0 1 (fontified t)) . -1634) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (#("s" 0 1 (fontified t)) . -1635) (undo-tree-id3541 . -1) 1636) nil (25774 42822 827135 323000) 0 nil])
([nil nil ((1630 . 1633)) nil (25774 42822 827122 53000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1631) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1632) (undo-tree-id3520 . -1) 1633) nil (25774 42822 827121 470000) 0 nil])
([nil nil ((1631 . 1652)) nil (25774 42822 827111 394000) 0 nil])
([nil nil ((1652 . 1665)) nil (25774 42822 827110 975000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3497 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3498 . 1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3499 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3500 . 1) (#("f" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3501 . 1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3502 . 1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3503 . 1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3504 . 1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3505 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3506 . 1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3507 . 1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3508 . 1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3509 . 1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3510 . 1) (#("p" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3511 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3512 . 1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3513 . 1) (#("x" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3514 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3515 . 1) (#("(" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3516 . 1) (undo-tree-id3517 . -1) (#(" " 0 1 (fontified t hilit-chg-delete nil)) . 1665)) nil (25774 42822 827109 241000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (#(")" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3490 . 1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3491 . 1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3492 . 1) (#("d" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3493 . 1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3494 . 1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3495 . 1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1665) (undo-tree-id3496 . 1)) nil (25774 42822 827094 441000) 0 nil])
([nil nil ((1670 . 1673)) nil (25774 42822 827079 331000) 0 nil])
([nil nil ((1673 . 1681)) nil (25774 42822 827078 617000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("d" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("z" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1681) (#("b" 0 1 (fontified t)) . 1681)) nil (25774 42822 827073 943000) 0 nil])
([nil nil ((#("All tutorials, talks and presentations will take place on the main campus of Heinrich Heine University (HHU) in Düsseldorf." 0 4 (fontified t) 4 39 (fontified t) 39 40 (fontified t hilit-chg-delete hilit-chg-delete) 40 44 (fontified t) 44 55 (fontified t) 55 56 (fontified t hilit-chg-delete hilit-chg-delete) 56 123 (fontified t)) . 1626) (undo-tree-id3805 . -21) (undo-tree-id3806 . -123) (undo-tree-id3807 . -123) 1748 (t 25774 42822 856796 298000)) nil (25774 42896 30579 127000) 0 nil])
([nil nil ((1626 . 1647)) nil (25774 42896 30577 432000) 0 nil])
([nil nil ((1647 . 1654)) nil (25774 42896 30577 200000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1648) (undo-tree-id3799 . -1) (#("q" 0 1 (fontified t hilit-chg hilit-chg)) . -1649) (undo-tree-id3800 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1650) (undo-tree-id3801 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1651) (undo-tree-id3802 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1652) (undo-tree-id3803 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1653) (undo-tree-id3804 . -1) 1654) nil (25774 42896 30576 717000) 0 nil])
([nil nil ((1648 . 1649)) nil (25774 42896 30573 873000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1636) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (#("f" 0 1 (fontified t hilit-chg hilit-chg)) . -1637) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1638) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1639) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (#("h" 0 1 (fontified t hilit-chg hilit-chg)) . -1640) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1641) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1642) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (#("c" 0 1 (fontified t hilit-chg hilit-chg)) . -1643) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1644) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1645) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1646) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1647) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (#("q" 0 1 (fontified t hilit-chg hilit-chg)) . -1648) (undo-tree-id3798 . -1) 1649) nil (25774 42896 30571 850000) 0 nil])
([nil nil ((1636 . 1657)) nil (25774 42896 30532 764000) 0 nil])
([nil nil ((1657 . 1670)) nil (25774 42896 30532 561000) 0 nil])
([nil nil ((1670 . 1691)) nil (25774 42896 30532 281000) 0 nil])
([nil nil ((1691 . 1705)) nil (25774 42896 30532 25000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1704) (undo-tree-id3707 . -1) 1705) nil (25774 42896 30531 549000) 0 nil])
([nil nil ((1704 . 1708)) nil (25774 42896 30524 452000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1701) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . 1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (#("n" 0 1 (fontified t hilit-chg hilit-chg)) . -1702) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1703) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (#("v" 0 1 (fontified t hilit-chg hilit-chg)) . -1704) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1705) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -1706) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1707) (undo-tree-id3706 . -1) 1708) nil (25774 42896 30523 333000) 0 nil])
([nil nil ((1701 . 1708)) nil (25774 42896 30509 92000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1707) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) 1708) nil (25774 42896 30508 720000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1702) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1703) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1704) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1705) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1706) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) 1707) nil (25774 42896 30507 10000) 0 nil])
([nil nil ((1702 . 1705)) nil (25774 42896 30495 529000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1703) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1704) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) 1705) nil (25774 42896 30494 940000) 0 nil])
([nil nil ((1703 . 1713)) nil (25774 42896 30492 178000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1712) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) 1713) nil (25774 42896 30491 884000) 0 nil])
([nil nil ((1712 . 1726)) nil (25774 42896 30490 306000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t hilit-chg hilit-chg)) . -1725) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) 1726) nil (25774 42896 30489 882000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t hilit-chg hilit-chg)) . -1719) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) 1720) nil (25774 42896 30488 271000) 0 nil])
([nil nil ((1719 . 1720)) nil (25774 42896 30486 632000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1726) (undo-tree-id3633 . -1) 1727) nil (25774 42896 30486 139000) 0 nil])
([nil nil ((1726 . 1737)) nil (25774 42896 30485 440000) 0 nil])
([nil nil ((#("." 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1736) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) 1737) nil (25774 42896 30485 81000) 0 nil])
([nil nil ((1736 . 1744)) nil (25774 42896 30483 772000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1738) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . 1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1739) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1740) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1741) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1742) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1743) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) 1744) nil (25774 42896 30482 501000) 0 nil])
([nil nil ((1738 . 1750)) nil (25774 42896 30469 452000) 0 nil])
([nil nil ((1750 . 1751)) nil (25774 42896 30469 131000) 0 nil])
([nil nil ((1751 . 1755)) nil (25774 42896 30468 848000) 0 nil])
([nil nil ((1755 . 1756)) nil (25774 42896 30468 545000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1749) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (#("/" 0 1 (fontified t hilit-chg hilit-chg)) . -1750) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg face font-lock-function-name-face)) . -1751) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (#(">" 0 1 (fontified t hilit-chg hilit-chg)) . -1752) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . 1) (undo-tree-id3593 . -1) (#("," 0 1 (fontified t hilit-chg hilit-chg)) . -1753) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1754) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -1755) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) 1756) nil (25774 42896 30467 467000) 0 nil])
([nil nil ((1749 . 1751)) nil (25774 42896 30402 590000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1749) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (#("p" 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1750) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) 1751) nil (25774 42896 30401 813000) 0 nil])
([nil nil ((1749 . 1760)) nil (25774 42896 30392 598000) 0 nil])
([nil nil ((#("," 0 1 (fontified t hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg)) . -1759) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) 1760) nil (25774 42896 30392 59000) 0 nil])
([nil nil ((1759 . 1760)) nil (25774 42896 30390 401000) 0 nil])
([nil nil ((1760 . 1761)) nil (25774 42896 30389 998000) 0 nil])
([nil nil ((1761 . 1775)) nil (25774 42896 30389 667000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t hilit-chg hilit-chg face font-lock-string-face)) . -1774) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) 1775) nil (25774 42896 30389 153000) 0 nil])
([nil nil ((1774 . 1785)) nil (25774 42896 30387 113000) 0 nil])
([nil nil ((1785 . 1788)) nil (25774 42896 30386 783000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1787) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) 1788) nil (25774 42896 30385 868000) 0 nil])
([nil nil ((1787 . 1790)) nil (25774 42896 30369 136000) 0 nil])
([nil nil ((1790 . 1791)) nil (25774 42896 30368 604000) 0 nil])
([nil nil ((1791 . 1795)) nil (25774 42896 30364 736000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1637) (t 25774 42896 64366 329000)) nil (25774 42933 955691 858000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1636) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) 1637) nil (25774 42933 955691 194000) 0 nil])
([nil nil ((1636 . 1638)) nil (25774 42933 955688 563000) 0 nil])
([nil nil ((1795 . 1801)) nil (25774 42933 955688 269000) 0 nil])
([nil nil ((1801 . 1807)) nil (25774 42933 955687 894000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1804) (undo-tree-id3930 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1805) (undo-tree-id3931 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -1806) (undo-tree-id3932 . -1) 1807) nil (25774 42933 955687 206000) 0 nil])
([nil nil ((1804 . 1809)) nil (25774 42933 955684 997000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t hilit-chg hilit-chg)) . -1797) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (#("h" 0 1 (fontified t hilit-chg hilit-chg)) . -1798) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1799) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1800) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1801) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1802) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1803) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1804) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -1805) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1806) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (#("a" 0 1 (fontified t hilit-chg hilit-chg)) . -1807) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1808) (undo-tree-id3929 . -1) 1809) nil (25774 42933 955681 956000) 0 nil])
([nil nil ((1797 . 1807)) nil (25774 42933 955638 417000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1804) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1805) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (#("r" 0 1 (fontified t hilit-chg hilit-chg)) . -1806) (undo-tree-id3851 . -1) 1807) nil (25774 42933 955637 767000) 0 nil])
([nil nil ((1804 . 1825)) nil (25774 42933 955633 504000) 0 nil])
([nil nil ((1825 . 1846)) nil (25774 42933 955633 191000) 0 nil])
([nil nil ((1846 . 1847)) nil (25774 42933 955632 752000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1845) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1846) (undo-tree-id3845 . -1) 1847) nil (25774 42933 955632 231000) 0 nil])
([nil nil ((1845 . 1852)) nil (25774 42933 955629 977000) 0 nil])
([nil nil ((#("." 0 1 (fontified t hilit-chg hilit-chg)) . -1849) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1850) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1851) (undo-tree-id3842 . -1) 1852) nil (25774 42933 955629 352000) 0 nil])
([nil nil ((1849 . 1858)) nil (25774 42933 955625 662000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1857) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) 1858) nil (25774 42933 955625 180000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1854) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (#("s" 0 1 (fontified t hilit-chg hilit-chg)) . -1855) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1856) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) 1857) nil (25774 42933 955623 61000) 0 nil])
([nil nil ((1854 . 1855)) nil (25774 42933 955589 120000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1852) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (#("g" 0 1 (fontified t hilit-chg hilit-chg)) . -1853) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1854) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) 1855) nil (25774 42933 955588 143000) 0 nil])
([nil nil ((1852 . 1873)) nil (25774 42933 955503 234000) 0 nil])
([nil nil ((1873 . 1894)) nil (25774 42933 955502 438000) 0 nil])
([nil nil ((1894 . 1897)) nil (25774 42933 955501 884000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t hilit-chg hilit-chg)) . -1896) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) 1897) nil (25774 42933 955500 626000) 0 nil])
([nil nil ((1896 . 1903)) nil (25774 42933 955486 873000) 0 nil])
([nil nil ((1903 . 1905)) nil (25774 42933 955482 114000) 0 nil])
([nil nil ((1630 . 1634) (t 25774 42933 988142 650000)) nil (25774 42991 647308 949000) 0 nil])
([nil nil ((1634 . 1635)) nil (25774 42991 647308 437000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1633) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (#("o" 0 1 (fontified t hilit-chg hilit-chg)) . -1634) (undo-tree-id4043 . -1) 1635) nil (25774 42991 647307 672000) 0 nil])
([nil nil ((1633 . 1641)) nil (25774 42991 647304 710000) 0 nil])
([nil nil ((#("," 0 1 (fontified t hilit-chg hilit-chg)) . -1639) (undo-tree-id4040 . -1) 1640) nil (25774 42991 647304 143000) 0 nil])
([nil nil ((1639 . 1640)) nil (25774 42991 647303 259000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1639) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) 1640) nil (25774 42991 647302 136000) 0 nil])
([nil nil ((1639 . 1642)) nil (25774 42991 647300 488000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1640) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (#("l" 0 1 (fontified t hilit-chg hilit-chg)) . -1641) (undo-tree-id4037 . -1) 1642) nil (25774 42991 647299 818000) 0 nil])
([nil nil ((1640 . 1653)) nil (25774 42991 647297 242000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg hilit-chg)) . -1652) (undo-tree-id4034 . -1) 1653) nil (25774 42991 647296 665000) 0 nil])
([nil nil ((1640 . 1641)) nil (25774 42991 647295 421000) 0 nil])
([nil nil ((#("of the collouqium" 0 2 (fontified t) 2 3 (fontified t hilit-chg-delete nil) 3 17 (fontified t)) . 1660) (undo-tree-id4032 . -17) (undo-tree-id4033 . -17) 1677) nil (25774 42991 647294 942000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1660)) nil (25774 42991 647292 935000) 0 nil])
([nil nil ((#("in lecture hall 5K" 0 18 (fontified t)) . 1676) (undo-tree-id4030 . -18) (undo-tree-id4031 . -18) 1694) nil (25774 42991 647292 412000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1675) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) 1676) nil (25774 42991 647290 198000) 0 nil])
([nil nil ((1784 . 1798)) nil (25774 42991 647287 76000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1793) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (#("q" 0 1 (fontified t hilit-chg hilit-chg)) . -1794) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (#("i" 0 1 (fontified t hilit-chg hilit-chg)) . -1795) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (#("u" 0 1 (fontified t hilit-chg hilit-chg)) . -1796) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (#("m" 0 1 (fontified t hilit-chg hilit-chg)) . -1797) (undo-tree-id4026 . -1) 1798) nil (25774 42991 647286 257000) 0 nil])
([nil nil ((1793 . 1814)) nil (25774 42991 647140 601000) 0 nil])
([nil nil ((1814 . 1827)) nil (25774 42991 647140 155000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t hilit-chg hilit-chg)) . -1824) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (#("e" 0 1 (fontified t hilit-chg hilit-chg)) . -1825) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (#("c" 0 1 (fontified t hilit-chg hilit-chg)) . -1826) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) 1827) nil (25774 42991 647138 792000) 0 nil])
([nil nil ((1824 . 1828)) nil (25774 42991 647133 834000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t hilit-chg hilit-chg)) . -1826) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (#("c" 0 1 (fontified t hilit-chg hilit-chg)) . -1827) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) 1828) nil (25774 42991 647119 261000) 0 nil])
([nil nil ((1826 . 1840)) nil (25774 42991 647114 744000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t hilit-chg hilit-chg)) . -1837) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (#("K" 0 1 (fontified t hilit-chg hilit-chg)) . -1838) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (#("." 0 1 (fontified t hilit-chg hilit-chg)) . -1839) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) 1840) nil (25774 42991 647113 957000) 0 nil])
([nil nil ((1837 . 1842)) nil (25774 42991 647109 255000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3969 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3970 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3971 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3972 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3973 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3974 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3975 . -1) (#("w" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3976 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3977 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3978 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3979 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3980 . -1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3981 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3982 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3983 . -1) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3984 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3985 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3986 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3987 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3988 . -1) (#("T" 0 1 (fontified t hilit-chg-delete nil)) . 1842)) nil (25774 42991 647107 322000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3948 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3949 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3950 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3951 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3952 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3953 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3954 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3955 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3956 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3957 . -1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3958 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3959 . -1) (#("l" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3960 . -1) (#("p" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3961 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3962 . -1) (#("e" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3963 . -1) (#("k" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3964 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3965 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3966 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3967 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3968 . -1)) nil (25774 42991 647094 91000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3937 . -1) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3938 . -1) (#("u" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3939 . -1) (#("p" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3940 . -1) (#("m" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3941 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3942 . -1) (#("c" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3943 . -1) (#(" " 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3944 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3945 . -1) (#("i" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3946 . -1) (#("a" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 1842) (undo-tree-id3947 . -1)) nil (25774 42991 647078 211000) 0 nil])
([nil nil ((1842 . 1857)) nil (25774 42991 647059 339000) 0 nil])
([nil nil ((1857 . 1859)) nil (25774 42991 647054 877000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -2089) (undo-tree-id4280 . -1) (undo-tree-id4281 . 1) (undo-tree-id4282 . -1) 2090 (t 25774 42991 679801 274000)) nil (25774 43026 403474 221000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2077) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (#("t" 0 1 (fontified t)) . -2078) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (#("h" 0 1 (fontified t)) . -2079) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (#("e" 0 1 (fontified t)) . -2080) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (#(" " 0 1 (fontified t)) . -2081) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (#("<" 0 1 (fontified t)) . -2082) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -2083) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -2084) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -2085) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -2086) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -2087) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (#("g" 0 1 (fontified t face font-lock-function-name-face)) . -2088) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (#("h" 0 1 (fontified t hilit-chg-delete hilit-chg-delete face font-lock-function-name-face)) . -2089) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -2090) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -2091) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -2092) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -2093) (undo-tree-id4279 . -1) 2094) nil (25774 43026 403466 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1841 . 1842) (nil fontified nil 1761 . 1842) (1761 . 1842) (t 25774 43026 435595 26000)) nil (25774 43339 810560 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1770 . 1771) (nil fontified nil 1734 . 1771) (1734 . 1771) (t 25774 43339 845719 445000)) nil (25774 43431 576809 777000) 0 nil])
([nil nil ((#("https://www.openstreetmap.org/?mlat=51.21741&mlon=6.78005#map=17/51.21741/6.78005" 0 44 (fontified t face font-lock-string-face) 44 49 (fontified t face font-lock-string-face) 49 80 (fontified t face font-lock-string-face) 80 81 (rear-nonsticky t fontified t face font-lock-string-face)) . 2378) (undo-tree-id4283 . -81) (undo-tree-id4284 . -81) (undo-tree-id4285 . -81) 2459 (t 25774 43431 609166 304000)) nil (25774 43530 71150 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2458 . 2459) (nil fontified nil 2378 . 2459) (2378 . 2459)) nil (25774 43598 575316 279000) 0 nil])
([nil nil ((#("https://www.openstreetmap.org/#map=19/51.22515/6.78257" 0 53 (fontified t face font-lock-string-face) 53 54 (rear-nonsticky t fontified t face font-lock-string-face)) . 2803) (undo-tree-id4310 . -54) (undo-tree-id4311 . -54) (undo-tree-id4312 . -54) 2857 (t 25774 43530 104571 143000)) nil (25774 43612 708269 959000) 0 nil] [nil nil ((#("https://www.openstreetmap.org/?mlat=51.21741&mlon=6.78139#map=17/51.21741/6.78139" 0 80 (fontified t face font-lock-string-face) 80 81 (fontified t rear-nonsticky t face font-lock-string-face)) . 2378) (undo-tree-id4286 . -81) (undo-tree-id4287 . -81) (undo-tree-id4288 . -81) (undo-tree-id4289 . -81) (undo-tree-id4290 . -81) (undo-tree-id4291 . -81) (undo-tree-id4292 . -81) (undo-tree-id4293 . -81) (undo-tree-id4294 . -81) (undo-tree-id4295 . -81) (undo-tree-id4296 . -81) (undo-tree-id4297 . -81) (undo-tree-id4298 . -81) (undo-tree-id4299 . -81) (undo-tree-id4300 . -81) (undo-tree-id4301 . -81) (undo-tree-id4302 . -81) (undo-tree-id4303 . -81) (t 25774 43530 104571 143000)) ((2378 . 2459)) (25774 43598 106538 23000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2879 . 2880) (nil fontified nil 2803 . 2880) (2803 . 2880)) nil (25774 43612 708255 679000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2454 . 2455) (nil fontified nil 2378 . 2455) (2378 . 2455)) ((#("https://www.openstreetmap.org/?mlat=51.2252&mlon=6.7829#map=16/51.2252/6.7829" 0 76 (hilit-chg hilit-chg fontified nil face font-lock-string-face) 76 77 (hilit-chg hilit-chg fontified nil rear-nonsticky nil face font-lock-string-face)) . 2378) (undo-tree-id4304 . -77) (undo-tree-id4305 . -76) (undo-tree-id4306 . -76) (undo-tree-id4307 . -76) (undo-tree-id4308 . -76) (undo-tree-id4309 . -77) (nil rear-nonsticky t 2454 . 2455)) (25774 43598 106433 516000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2921) (undo-tree-id4388 . -1) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2921) (undo-tree-id4389 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2921) (undo-tree-id4390 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2921) (undo-tree-id4391 . -1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2921) (undo-tree-id4392 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2921) (undo-tree-id4393 . -1) (#("s" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 2921) (undo-tree-id4394 . -1) (#("<" 0 1 (fontified t)) . 2921) (undo-tree-id4395 . 1) (undo-tree-id4396 . -1) (t 25774 43612 732070 891000)) nil (25774 43625 478952 494000) 0 nil])
nil
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2934) (undo-tree-id4378 . -1) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4379 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4380 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4381 . -1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4382 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4383 . -1) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4384 . -1) (#("/" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2934) (undo-tree-id4385 . -1) (#("<" 0 1 (fontified t)) . 2934) (undo-tree-id4386 . 1) (undo-tree-id4387 . -1)) nil (25774 43625 478947 78000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t hilit-chg-delete hilit-chg-delete syntax-table (1))) . 2938) (undo-tree-id4369 . -1) (#("g" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4370 . -1) (#("n" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4371 . -1) (#("o" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4372 . -1) (#("r" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4373 . -1) (#("t" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4374 . -1) (#("s" 0 1 (fontified t hilit-chg-delete hilit-chg-delete)) . 2938) (undo-tree-id4375 . -1) (#("<" 0 1 (fontified t)) . 2938) (undo-tree-id4376 . 1) (undo-tree-id4377 . -1)) nil (25774 43625 478834 144000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -2961) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (#("/" 0 1 (fontified t)) . -2962) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -2963) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -2964) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -2965) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -2966) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -2967) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (#("g" 0 1 (fontified t face font-lock-function-name-face)) . -2968) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (#(">" 0 1 (fontified t)) . -2969) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . 1) (undo-tree-id4368 . -1) 2970) nil (25774 43625 478825 817000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1373) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) 1374 (t 25774 43625 507993 473000)) nil (25774 43699 976574 399000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1362) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (#("&" 0 1 (fontified t)) . -1363) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -1364) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -1365) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -1366) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (#(";" 0 1 (fontified t face font-lock-variable-name-face)) . -1367) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (#(" " 0 1 (fontified t)) . -1368) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (#("H" 0 1 (fontified t)) . -1369) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (#("o" 0 1 (fontified t)) . -1370) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (#("t" 0 1 (fontified t)) . -1371) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (#("e" 0 1 (fontified t)) . -1372) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) 1373) nil (25774 43699 976569 397000) 0 nil])
([nil nil ((1362 . 1363)) nil (25774 43699 976500 132000) 0 nil])
([nil nil ((#(" (registered participants only) " 0 2 (hilit-chg-delete hilit-chg-delete fontified t) 2 30 (fontified t) 30 31 (hilit-chg-delete hilit-chg-delete rear-nonsticky t fontified t) 31 32 (fontified t)) . 2607) (undo-tree-id4576 . -32) (undo-tree-id4577 . -32) (undo-tree-id4578 . -32) 2639 (t 25774 43700 7541 717000)) nil (25774 43990 507169 475000) 0 nil])
([nil nil ((2607 . 2608)) nil (25774 43990 507167 392000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2858) (undo-tree-id4575 . -1) 2859) nil (25774 43990 507166 868000) 0 nil])
([nil nil ((2858 . 2859)) nil (25774 43990 507165 334000) 0 nil])
([nil nil ((#("S" 0 1 (hilit-chg-delete hilit-chg-delete fontified t)) . 2859) (undo-tree-id4574 . -1) (#(" " 0 1 (hilit-chg-delete nil fontified t)) . 2859)) nil (25774 43990 507164 669000) 0 nil])
([nil nil ((2859 . 2861)) nil (25774 43990 507163 226000) 0 nil])
([nil nil ((2919 . 2940)) nil (25774 43990 507162 752000) 0 nil])
([nil nil ((2940 . 2946)) nil (25774 43990 507162 13000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2977 . 2978) (nil fontified nil 2977 . 2978) (nil fontified nil 2976 . 2977) (nil fontified nil 2948 . 2976) (nil fontified nil 2946 . 2948) (2946 . 2978)) nil (25774 43990 507161 287000) 0 nil])
([nil nil ((2946 . 2949)) nil (25774 43990 507160 461000) 0 nil])
([nil nil ((#("(" 0 1 (hilit-chg-delete hilit-chg-delete hilit-chg hilit-chg fontified t)) . 2949) (undo-tree-id4568 . -1) (undo-tree-id4569 . 1) (undo-tree-id4570 . -1) (#(" " 0 1 (hilit-chg-delete nil hilit-chg hilit-chg fontified t)) . 2949) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1)) nil (25774 43990 507159 617000) 0 nil])
([nil nil ((2949 . 2950)) nil (25774 43990 507155 132000) 0 nil])
([nil nil ((#(")" 0 1 (hilit-chg-delete hilit-chg-delete rear-nonsticky t hilit-chg hilit-chg fontified t)) . -2978) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . 1) (undo-tree-id4563 . -1) (#(" " 0 1 (hilit-chg hilit-chg fontified t rear-nonsticky t)) . -2979) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) 2980) nil (25774 43990 507153 540000) 0 nil])
([nil nil ((2978 . 2979)) nil (25774 43990 507129 136000) 0 nil])
([nil nil ((2922 . 2930) (t 25774 43990 541775 699000)) nil (25774 43997 332978 775000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 2930)) nil (25774 43997 332973 119000) 0 nil])
([nil nil ((4746 . 4747) (t 25774 43997 365734 158000)) nil (25774 44078 299437 125000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t hilit-chg hilit-chg)) . -4746) (undo-tree-id4581 . -1) 4747) nil (25774 44078 299436 536000) 0 nil])
([nil nil ((4831 . 4832)) nil (25774 44078 299435 503000) 0 nil])
([nil nil ((4832 . 4833)) nil (25774 44078 299434 625000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t hilit-chg hilit-chg)) . -4832) (undo-tree-id4580 . -1) 4833) nil (25774 44078 299434 174000) 0 nil])
([nil nil ((4831 . 4834)) nil (25774 44078 299432 121000) 0 nil])
([nil nil ((5249 . 5250)) nil (25774 44078 299431 789000) 0 nil])
([nil nil ((5250 . 5251)) nil (25774 44078 299431 356000) 0 nil])
([nil nil ((5251 . 5253)) nil (25774 44078 299430 823000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -5246) (undo-tree-id4579 . -3) 5253) nil (25774 44078 299426 937000) 0 nil])
([nil current ((5250 . 5251) (t 25774 44078 329241 90000)) nil (25774 44078 931950 538000) 0 nil])
nil
